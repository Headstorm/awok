{"version":3,"sources":["headstorm_logo.png","screens/GoodDay.js","apiCalls.js","common/DonutChart.js","common/InfoPopUp.js","screens/CheckIn.js","screens/AlertsOptIn.js","screens/COVIDCheck.js","screens/COVIDTestDate.js","screens/SafetyRejection.js","screens/SymptomsScreen.js","screens/WFHConf.js","screens/Admin.js","common/Header.js","common/Footer.js","screens/COVIDPostive.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BaseContainer","styled","div","GoodDay","props","getCheckInCounts","a","fetch","mode","DonutTrack","circle","Indicator","Donut","svg","Label","LabelsContainer","SVGLabel","DonutChart","value","circumference","Math","PI","halfsize","dashval","spotsOpen","totalOccupancy","spotsTaken","trackstyle","strokeWidth","indicatorstyle","strokeDasharray","width","height","className","r","cx","size","cy","transform","style","fill","Modal","ModalContent","Text","span","InfoPopUp","onClick","handleDismiss","StyledButton","withStyles","root","color","backgroundColor","marginBottom","Button","HeaderDiv","H2","h2","RemoteH2","H3","h3","withRouter","nextPath","path","history","push","useState","showInfoModal","setShowInfoModal","donutval","setDonutVal","immuneCount","setImmuneCount","fineCount","setFineCount","useEffect","then","res","json","response","positiveCount","negativeCount","catch","error","console","log","fontSize","variant","YesButton","NoButton","handleClick","TestedPositive","localStorage","getItem","method","noValidate","TextField","fullWidth","label","FormControlLabel","control","Checkbox","borderColor","HeaderQuestion","isPositive","setItem","CheckInButton","covidDate","setCovidDate","today","Date","defaultDate","toISOString","slice","twoWeeksAgoDate","type","defaultValue","onChange","e","target","GoingHomeButton","WFHConf","AdminForm","StyledTextField","FooterDiv","StyledSnackBar","Snackbar","companyName","occupancyRule","currentRules","successMessage","formData","setFormData","open","setOpen","savedSuccessfully","handleChange","getAttribute","InputLabelProps","shrink","placeholder","name","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","event","reason","severity","Logo","img","Count","showCheckInCount","includes","location","pathname","numCheckedIn","setNumCheckedIn","src","HeadstormLogo","App","SymptomsScreen","COVIDPostive","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d796d3a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headstorm_logo.872b2a80.png\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst BaseContainer = styled.div`\n  flex-direction: column;\n  align-self: center;\n  flex: 1 0 auto;\n`;\n\nconst GoodDay = (props) => {\n  return (\n    <BaseContainer>\n      <h2>\n        Have a great day!\n        <br />\n        <br />\n        Lawrence says\n        <br />\n        \"Get to work\"\n      </h2>\n    </BaseContainer>\n  );\n};\n\nexport default GoodDay;\n","export const patchCheckIn = (TestedPositive) => {\n  fetch(\n    `https://crhs49zgsk.execute-api.us-east-2.amazonaws.com/default/project-reckoning/employee-count?TestedPositive=${TestedPositive}`,\n    {\n      method: 'PATCH',\n      mode: 'cors',\n    }\n  );\n};\n\nexport const getCheckInCounts = async () =>\n  fetch(\n    'https://crhs49zgsk.execute-api.us-east-2.amazonaws.com/default/project-reckoning/employee-count',\n    {\n      mode: 'cors',\n    }\n  );\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DonutTrack = styled.circle`\n\tfill: transparent;\n\tstroke: #DAE2E5;\n\tstroke-width: 26;\n`;\n\nconst Indicator = styled.circle`\n\tfill: transparent;\n  stroke: #518DFD;\n  stroke-width: 26;\n`;\n\nconst Donut = styled.svg`\n\tmargin: 0 auto;\n  border-radius: 50%;\n  display: block;\n`;\n\nconst Label = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n`;\n\nconst BaseContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tpadding-bottom: 2rem;\n`;\n\nconst LabelsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst SVGLabel = styled.svg`\n\theight: 3rem;\n\twidth: 3rem;\n`;\n\nconst DonutChart = props => {\n\tconst size = 115;\n\tconst strokewidth = 26;\n\tconst value = props.value;\n\tconst halfsize = (size * 0.5);\n\tconst radius = halfsize - (strokewidth * 0.5);\n\tconst circumference = 2 * Math.PI * radius;\n\tconst strokeval = ((value * circumference) / 100);\n\tconst dashval = (strokeval + ' ' + circumference);\n\tconst spotsOpen = props.totalOccupancy - props.spotsTaken;\n\n\tconst trackstyle = {strokeWidth: strokewidth};\n\tconst indicatorstyle = {strokeWidth: strokewidth, strokeDasharray: dashval}\n\tconst rotateval = 'rotate(-90 '+halfsize+','+halfsize+')';\n\n\treturn (\n\t\t<BaseContainer>\n\t\t<Donut width={size} height={size} className=\"donutchart\">\n\t\t\t<DonutTrack r={radius} cx={halfsize} cy={halfsize} transform={rotateval} style={trackstyle} className=\"donutchart-track\"/>\n\t\t\t<Indicator r={radius} cx={halfsize} cy={halfsize} transform={rotateval} style={indicatorstyle} className=\"donutchart-indicator\"/>\n\t\t</Donut>\n\t\t<LabelsContainer>\n\t\t\t<Label>\n\t\t\t\t<label><b>{spotsOpen}</b> Spots Open</label>\n\t\t\t\t<SVGLabel>\n\t\t\t\t\t<circle cx={20} cy={20} r={10} fill='#DAE2E5' />\n\t\t\t\t</SVGLabel>\n\t\t\t</Label>\n\t\t\t<Label>\n\t\t\t\t<label><b>{props.spotsTaken}</b> Checked In</label>\n\t\t\t\t<SVGLabel>\n\t\t\t\t\t<circle cx={20} cy={20} r={10} fill='#518DFD' />\n\t\t\t\t</SVGLabel>\n\t\t\t</Label>\n\t\t</LabelsContainer>\n\t\t</BaseContainer>\n\t);\n}\n\nexport default DonutChart;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 1; \n  top: 0;  \n  left: 0;  \n  right: 0;  \n  bottom: 0;  \n  background-color: rgba(0,0,0, 0.5);\n`;\n\nconst ModalContent = styled.div`\n  position: relative;  \n  left: 10%;  \n  right: 10%;  \n  top: 10%;  \n  bottom: 60%;  \n  border-radius: 1px;  \n  background: white;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n`;\n\nconst Text = styled.span`\n  color: #518DFD;\n  align-self: flex-end;\n`;\n\nconst InfoPopUp = props => {\n  return (\n    <Modal>\n      <ModalContent>\n      <p>Rules: </p>\n      <Text onClick={() => props.handleDismiss()}>Dismiss</Text>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default InfoPopUp;","import React, { useState, useEffect } from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { getCheckInCounts } from '../apiCalls';\nimport DonutChart from '../common/DonutChart';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport InfoPopUp from '../common/InfoPopUp';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#518DFD',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem 2rem 0rem 2rem;\n  flex: 1 0;\n`;\n\nconst HeaderDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: space-between;\n`;\n\nconst H2 = styled.h2`\n  text-align: center;\n  padding: 0rem;\n  margin: 0;\n`;\n\nconst RemoteH2 = styled.h2`\n  text-align: center;\n  padding-bottom: 2rem;\n  margin: 0;\n`;\n\nconst H3 = styled.h3`\n  text-align: center;\n`;\n\nconst CheckIn = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [donutval, setDonutVal] = useState(0);\n  const [immuneCount, setImmuneCount] = useState(0);\n  const [fineCount, setFineCount] = useState(0);\n  const totalOccupancy = 25;\n  \n  const handleDismiss = () => {\n    setShowInfoModal(false);\n   };\n\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setImmuneCount(response.positiveCount);\n        setFineCount(response.negativeCount);\n        setDonutVal((response.positiveCount + response.negativeCount) / totalOccupancy * 100);\n      })\n      .catch((error) => console.log(error));\n  });\n\n  console.log('state', showInfoModal)\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <H2>Want to come into the office today?</H2>\n        <H3>\n          {immuneCount + fineCount} out of {totalOccupancy} spots taken\n          <InfoOutlinedIcon\n            fontSize='small'\n            onClick={() => setShowInfoModal(true)}\n          />\n        </H3>\n        <h3>Today's checkins</h3>\n        <DonutChart value={donutval} spotsTaken={immuneCount + fineCount} totalOccupancy={totalOccupancy} />\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          onClick={() => nextPath('/covid-check')}\n        >\n          Check In\n        </StyledButton>\n      </HeaderDiv>\n      <RemoteH2>Plan on working remote?</RemoteH2>     \n      <StyledButton onClick={() => nextPath('/good-day')}>\n        Working Remote\n      </StyledButton>\n      {showInfoModal ? <InfoPopUp handleDismiss={handleDismiss}/> : null}\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(CheckIn);\n","import React from 'react';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { patchCheckIn } from '../apiCalls';\n\nconst YesButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst NoButton = withStyles(() => ({\n  root: {\n    color: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem 2rem 0rem 2rem;\n  flex: 1 0;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst AlertsOptIn = (props) => {\n  const handleClick = (path) => {\n    patchCheckIn(localStorage.getItem('isPositive'));\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          Would you like to receive alerts for this office?\n          <br />\n          <br />\n          Your health status is never tied to your email address or phone\n          number. These are used for anonymous alerting only.\n        </h2>\n      </HeaderDiv>\n      <form noValidate>\n        <TextField fullWidth label=\"Email Address\" />\n        <TextField fullWidth label=\"Phone Number\" />\n      </form>\n      <FormControlLabel\n        control={<Checkbox />}\n        label=\"Remember my answer on this device\"\n      />\n      <YesButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => handleClick('/good-day')}\n      >\n        Yes\n      </YesButton>\n      <NoButton size=\"large\" onClick={() => handleClick('/good-day')}>\n        No thanks\n      </NoButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(AlertsOptIn);\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst YesButton = withStyles(() => ({\n  root: {\n    color: '#D96239',\n    borderColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst NoButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem;\n  flex: 1 0;\n`;\n\nconst HeaderQuestion = styled.h2`\n  margin-bottom: 2rem;\n`;\n\nconst COVIDCheck = (props) => {\n  const handleClick = (path, isPositive) => {\n    localStorage.setItem('isPositive', isPositive);\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        Have you ever tested positive for Covid-19?\n      </HeaderQuestion>\n      <YesButton\n        size=\"large\"\n        variant=\"outlined\"\n        onClick={() => handleClick('/covid-test-date', true)}\n      >\n        Yes\n      </YesButton>\n      <NoButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => handleClick('/symptoms-screen', false)}\n      >\n        No\n      </NoButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React, { useState } from 'react';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst CheckInButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem 2rem 0rem 2rem;\n  flex: 1 0;\n  `;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst COVIDTestDate = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  const [covidDate, setCovidDate] = useState();\n  const today = new Date();\n  const defaultDate = today.toISOString().slice(0,10);\n  const twoWeeksAgoDate = new Date(today-(1000 * 60 * 60 * 24 * 14)).toISOString().slice(0,10);\n\n  const onDateChange = (e) => { setCovidDate(e.target.value) }\n  const onCheckInClick = () => {\n    if(covidDate >= twoWeeksAgoDate) {\n      nextPath('/covid-positive')\n    } else {\n      nextPath('/alerts')\n    }\n  }\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          When did you test positive?\n          <br />\n          <br />\n          We will use this information to alert other people who have visited\n          this office.\n        </h2>\n      </HeaderDiv>\n      <form noValidate>\n        <TextField\n          type='date'\n          defaultValue={defaultDate}\n          onChange={onDateChange}\n        />\n      </form>\n      <FormControlLabel\n        control={<Checkbox />}\n        label=\"Remember my answer on this device\"\n      />\n      <CheckInButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={onCheckInClick}\n      >\n        Check In\n      </CheckInButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDTestDate);\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst GoingHomeButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem;\n  flex: 1 0;\n  `;\n\nconst HeaderQuestion = styled.h2`\n  margin-bottom: 2rem;\n`;\n\nconst SafetyRejection = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        Going to work with these symptoms puts the rest of your office at risk.\n        <br />\n        <br />\n        Please work from home today.\n      </HeaderQuestion>\n      <GoingHomeButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => nextPath('/wfh-conf')}\n      >\n        Going back home\n      </GoingHomeButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(SafetyRejection);\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst YesButton = withStyles(() => ({\n  root: {\n    color: '#D96239',\n    borderColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst NoButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem 2rem 0rem 2rem;\n  flex: 1 0;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst COVIDCheck = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          Have you experienced any of the following in the last 24 hours?\n          <br />\n          <br />\n          Loss of taste and smell <br />\n          Fever <br />\n          Dry Cough <br />\n          Sore Throat <br />\n          ...{' '}\n        </h2>\n      </HeaderDiv>\n      <YesButton\n        size=\"large\"\n        variant=\"outlined\"\n        onClick={() => nextPath('/safety-rejection')}\n      >\n        Yes\n      </YesButton>\n      <NoButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => nextPath('/alerts')}\n      >\n        No\n      </NoButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  margin: 2rem 2rem 0rem 2rem;\n  flex: 1 0;\n`;\n\nconst WFHConf = (props) => {\n  return (\n    <BaseContainer>\n      <h2>\n        Thank you for helping to keep the office safe and healthy.\n        <br />\n        <br />\n        Please remember to reach out to your Project Lead via Slack or email if\n        you need to take some time off\n      </h2>\n    </BaseContainer>\n  );\n};\n\nexport default WFHConf;\n","import React, { useState } from 'react';\nimport { TextField, Button, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex: 1 0;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AdminForm = styled.div`\n  margin: 3rem 2rem 0rem 2rem;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin-bottom: 1rem !important;\n`;\n\nconst FooterDiv = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n`;\n\nconst StyledButton = styled(Button)`\n  align-self: flex-end;\n  margin: 0rem 2rem 1rem 1rem !important;\n  width: 8rem;\n  background-color: #288bea !important;\n  color: #ffffff !important;\n`;\n\nconst StyledSnackBar = styled(Snackbar)`\n  position: inherit !important;\n  margin-right: auto;\n  margin-left: 2rem;\n`;\n\nconst Admin = (props) => {\n  const [formData, setFormData] = useState({\n    companyName: '',\n    occupancyRule: '',\n    currentRules: '',\n    successMessage: '',\n  });\n\n  const [open, setOpen] = useState(false);\n\n  //   will be set depending on api success or fail\n  // eslint-disable-next-line no-unused-vars\n  const [savedSuccessfully, setSavedSuccessfully] = useState(true);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.getAttribute('name')]: e.target.value,\n    });\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  };\n\n  return (\n    <BaseContainer>\n      <AdminForm>\n        <form>\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            fullWidth\n            type=\"text\"\n            placeholder=\"e.g. Headstorm\"\n            name=\"companyName\"\n            value={formData.companyName}\n            onChange={(e) => handleChange(e)}\n            label=\"Company Name\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"number\"\n            name=\"occupancyRule\"\n            placeholder=\"e.g. 25\"\n            onChange={(e) => handleChange(e)}\n            value={formData.occupancyRule}\n            fullWidth\n            label=\"Occupancy Rule\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"text\"\n            name=\"currentRules\"\n            placeholder=\"e.g. Rule 1: ..., Rule 2: ..., Rule 3: ...\"\n            onChange={(e) => handleChange(e)}\n            value={formData.currentRules}\n            fullWidth\n            label=\"Current Rules\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"text\"\n            fullWidth\n            placeholder=\"e.g. Have a good day!\"\n            onChange={(e) => handleChange(e)}\n            name=\"successMessage\"\n            value={formData.successMessage}\n            label=\"Success Message\"\n          />\n        </form>\n      </AdminForm>\n      <FooterDiv>\n        <StyledSnackBar\n          autoHideDuration={3000}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n          open={open}\n          onClose={handleClose}\n        >\n          {savedSuccessfully ? (\n            <MuiAlert severity=\"success\">Saved</MuiAlert>\n          ) : (\n            <MuiAlert severity=\"error\">Error saving</MuiAlert>\n          )}\n        </StyledSnackBar>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          onClick={() => handleClick()}\n        >\n          Save\n        </StyledButton>\n      </FooterDiv>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(Admin);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getCheckInCounts } from '../apiCalls';\nimport HeadstormLogo from '../headstorm_logo.png';\nimport { withRouter } from 'react-router-dom';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1.5rem;\n  background-color: rgb(209, 224, 224,30%);\n  border-bottom: .2rem solid #d1e0e0;\n`;\n\nconst Logo = styled.img`\n  width: 50%;\n  height: 50%;\n`;\n\nconst Count = styled.div`\n  margin-left: auto;\n`;\n\nconst Header = props => {\n  const showCheckInCount = ['/', '/safety-rejection'].includes(props.location.pathname) ? false : true;\n  const [numCheckedIn, setNumCheckedIn] = useState(0);\n  const totalOccupancy = 25;\n\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setNumCheckedIn(response.positiveCount + response.negativeCount);\n      })\n      .catch((error) => console.log(error));\n  });\n\n  return (\n    <BaseContainer>\n      <Logo src={HeadstormLogo} />\n      {showCheckInCount ? <Count>Checked In {numCheckedIn} / {totalOccupancy}</Count> : null}\n    </BaseContainer>\n  )\n};\n\nexport default withRouter(Header);","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst Footer = () => {\n  const BaseContainer = styled.div`\n    padding: 1rem;\n    text-align: center;\n    background-color: rgb(209, 224, 224, 30%);\n  `;\n\n  return (\n    <BaseContainer>\n      All answers are completely anonymous. We do not track your phone,\n      location, or anything about you\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(Footer);\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst GoingHomeButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem 2rem 0rem 2rem;\n  flex: 1 0;\n  `;\n\nconst HeaderQuestion = styled.h2`\n  margin-bottom: 2rem;\n`;\n\nconst COVIDPositive = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        CDC Guidelines state \"Stay home until 14 days after your last exposure\"\n        <br />\n        <br />\n        Please work from home today.\n      </HeaderQuestion>\n      <GoingHomeButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => nextPath('/wfh-conf')}\n      >\n        Going back home\n      </GoingHomeButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDPositive);\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport GoodDay from './screens/GoodDay';\nimport CheckIn from './screens/CheckIn';\nimport AlertsOptIn from './screens/AlertsOptIn';\nimport COVIDCheck from './screens/COVIDCheck';\nimport COVIDTestDate from './screens/COVIDTestDate';\nimport SafetyRejection from './screens/SafetyRejection';\nimport SymptomsScreen from './screens/SymptomsScreen';\nimport WFHConf from './screens/WFHConf';\nimport Admin from './screens/Admin';\nimport Header from './common/Header';\nimport Footer from './common/Footer';\nimport COVIDPostive from './screens/COVIDPostive';\nimport styled from 'styled-components';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  min-height: 100vh;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <BaseContainer>\n        <Header />\n        <Switch>\n          <Route path=\"/alerts\">\n            <AlertsOptIn />\n          </Route>\n          <Route path=\"/check-in\">\n            <CheckIn />\n          </Route>\n          <Route path=\"/covid-check\">\n            <COVIDCheck />\n          </Route>\n          <Route path=\"/covid-test-date\">\n            <COVIDTestDate />\n          </Route>\n          <Route path=\"/good-day\">\n            <GoodDay />\n          </Route>\n          <Route path=\"/safety-rejection\">\n            <SafetyRejection />\n          </Route>\n          <Route path=\"/symptoms-screen\">\n            <SymptomsScreen />\n          </Route>\n          <Route path=\"/wfh-conf\">\n            <WFHConf />\n          </Route>\n          <Route path=\"/admin\">\n            <Admin />\n          </Route>\n          <Route path=\"/covid-positive\">\n            <COVIDPostive />\n          </Route>\n          <Route path=\"/\">\n            <CheckIn />\n          </Route>\n        </Switch>\n        <Footer />\n      </BaseContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
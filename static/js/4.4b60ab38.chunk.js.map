{"version":3,"sources":["screens/Admin.js"],"names":["BaseContainer","styled","div","AdminForm","StyledTextField","TextField","FooterDiv","MiddleDiv","StyledButton","Button","StyledSnackBar","Snackbar","withRouter","props","useState","companyName","occupancyRule","currentRules","successMessage","formData","setFormData","checkInData","JSON","parse","localStorage","getItem","slice","reverse","daysOfTheWeek","open","setOpen","chartData","map","item","positiveCount","negativeCount","savedSuccessfully","setSavedSuccessfully","lineChartInfo","labels","Date","getDay","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","useEffect","getSettings","then","res","json","response","catch","e","console","log","handleChange","target","getAttribute","value","InputLabelProps","shrink","fullWidth","type","placeholder","name","onChange","options","title","display","text","fontSize","legend","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","event","reason","severity","size","variant","onClick","setSettings"],"mappings":"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","file":"static/js/4.4b60ab38.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { getSettings, setSettings } from '../apiCalls';\nimport { Line } from 'react-chartjs-2';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex: 1 0;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AdminForm = styled.div`\n  margin: 3rem 2rem 0rem 2rem;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin-bottom: 1rem !important;\n`;\n\nconst FooterDiv = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n`;\n\nconst MiddleDiv = styled.div`\n  display: flex;\n  justify-content: center;\n\n  canvas {\n    max-height: 40rem !important;\n    max-width: 40rem !important;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  align-self: flex-end;\n  margin: 0rem 2rem 1rem 1rem !important;\n  width: 8rem;\n  background-color: #288bea !important;\n  color: #ffffff !important;\n`;\n\nconst StyledSnackBar = styled(Snackbar)`\n  position: inherit !important;\n  margin-right: auto;\n  margin-left: 2rem;\n`;\n\nconst Admin = (props) => {\n  const [formData, setFormData] = useState({\n    companyName: '',\n    occupancyRule: '',\n    currentRules: '',\n    successMessage: '',\n  });\n\n  const checkInData = JSON.parse(localStorage.getItem('checkInHistory'))\n    .slice(0, 7)\n    .reverse();\n\n  const daysOfTheWeek = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n\n  const [open, setOpen] = useState(false);\n  const chartData = checkInData.map(\n    (item) => item.positiveCount + item.negativeCount\n  );\n\n  const [savedSuccessfully, setSavedSuccessfully] = useState(true);\n  const xAxis = checkInData.map(\n    (item) => daysOfTheWeek[new Date(item.Date).getDay()]\n  );\n  const lineChartInfo = {\n    labels: xAxis,\n    datasets: [\n      {\n        label: 'Attendance',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: '#288bea',\n        borderColor: '#288bea',\n        borderWidth: 3,\n        data: chartData,\n      },\n    ],\n  };\n\n  const lineChartOptions = {\n    title: {\n      display: true,\n      text: 'Attendance for The Last Seven Days',\n      fontSize: 20,\n    },\n    legend: {\n      display: false,\n    },\n  };\n\n  useEffect(() => {\n    getSettings()\n      .then((res) => res.json())\n      .then((response) => {\n        setFormData(response);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.getAttribute('name')]: e.target.value,\n    });\n  };\n\n  const handleClick = () => {\n    setSettings(formData)\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((e) => {\n        console.log(e);\n        setSavedSuccessfully(false);\n      });\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  };\n\n  return (\n    <BaseContainer>\n      <AdminForm>\n        <form>\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            fullWidth\n            type=\"text\"\n            placeholder=\"e.g. Headstorm\"\n            name=\"companyName\"\n            value={formData.companyName}\n            onChange={(e) => handleChange(e)}\n            label=\"Company Name\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"number\"\n            name=\"occupancyRule\"\n            placeholder=\"e.g. 25\"\n            onChange={(e) => handleChange(e)}\n            value={formData.occupancyRule}\n            fullWidth\n            label=\"Occupancy Rule\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"text\"\n            name=\"currentRules\"\n            placeholder=\"e.g. Rule 1, Rule 2, ...\"\n            onChange={(e) => handleChange(e)}\n            value={formData.currentRules}\n            fullWidth\n            label=\"Current Rules\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"text\"\n            fullWidth\n            placeholder=\"e.g. Have a good day!\"\n            onChange={(e) => handleChange(e)}\n            name=\"successMessage\"\n            value={formData.successMessage}\n            label=\"Success Message\"\n          />\n        </form>\n      </AdminForm>\n      <MiddleDiv>\n        <Line data={lineChartInfo} options={lineChartOptions} />\n      </MiddleDiv>\n      <FooterDiv>\n        <StyledSnackBar\n          autoHideDuration={3000}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n          open={open}\n          onClose={handleClose}\n        >\n          {savedSuccessfully ? (\n            <MuiAlert severity=\"success\">Saved</MuiAlert>\n          ) : (\n            <MuiAlert severity=\"error\">Error saving</MuiAlert>\n          )}\n        </StyledSnackBar>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          onClick={() => handleClick()}\n        >\n          Save\n        </StyledButton>\n      </FooterDiv>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(Admin);\n"],"sourceRoot":""}
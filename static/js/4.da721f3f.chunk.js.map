{"version":3,"sources":["screens/Admin.js"],"names":["BaseContainer","styled","div","AdminForm","StyledTextField","TextField","StyledNumberField","StyledRadio","Radio","FooterDiv","MiddleDiv","StyledButton","Button","StyledSnackBar","Snackbar","StyledRadioGroup","RadioGroup","daysOfTheWeek","convertTo12Hour","time","moment","Date","format","split","convertHourToIsoDate","amPm","currentMilitaryTime","convertToMilitary","momentDate","momentDateTime","toDate","toISOString","withRouter","props","useState","companyName","occupancyRule","currentRules","successMessage","reservationClearOut","formData","setFormData","radioValue","setRadioValue","isTimeError","setTimeError","checkInData","JSON","parse","localStorage","getItem","slice","reverse","open","setOpen","chartData","map","item","positiveCount","negativeCount","savedSuccessfully","setSavedSuccessfully","lineChartInfo","labels","getDay","getMonth","getDate","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","useEffect","getSettings","then","res","json","response","catch","e","console","log","handleTextFieldChange","target","getAttribute","value","InputLabelProps","shrink","fullWidth","type","placeholder","name","onChange","onBlur","handleTimeBlur","error","helperText","InputProps","inputProps","min","max","row","handleRadioChange","control","options","title","display","text","fontSize","legend","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","event","reason","severity","size","variant","onClick","setSettings"],"mappings":"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","file":"static/js/4.da721f3f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  TextField,\n  Button,\n  Snackbar,\n  Radio,\n  FormControlLabel,\n  RadioGroup,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { getSettings, setSettings } from '../services/apiCalls';\nimport { Line } from 'react-chartjs-2';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex: 1 0;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AdminForm = styled.div`\n  margin: 3rem 2rem 0rem 2rem;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin-bottom: 1rem !important;\n`;\n\nconst StyledNumberField = styled(TextField)`\n  width: 45% !important;\n  margin-right: 1rem !important;\n`;\n\nconst StyledRadio = styled(Radio)`\n  color: #1380e2 !important;\n`;\n\nconst FooterDiv = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n`;\n\nconst MiddleDiv = styled.div`\n  display: flex;\n  justify-content: center;\n\n  canvas {\n    max-height: 40rem !important;\n    max-width: 40rem !important;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  align-self: flex-end;\n  margin: 0rem 2rem 1rem 1rem !important;\n  width: 8rem;\n  background-color: #288bea !important;\n  color: #ffffff !important;\n`;\n\nconst StyledSnackBar = styled(Snackbar)`\n  position: inherit !important;\n  margin-right: auto;\n  margin-left: 2rem;\n`;\n\nconst StyledRadioGroup = styled(RadioGroup)`\n  display: inline !important;\n`;\n\nconst daysOfTheWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n// this assumes a full datetime string\nconst convertTo12Hour = (time) => {\n  return moment(new Date(time), 'HH:mm').format('h a').split(' ');\n};\n\n// this assumes a string such as \"1 am\"\nconst convertToMilitary = (time, amPm) => {\n  return moment(`${time} ${amPm}`, 'h a').format('HH:mm');\n};\n\nconst convertHourToIsoDate = (time, amPm) => {\n  const currentMilitaryTime = convertToMilitary(time, amPm);\n  const momentDate = moment(new Date()).format('L');\n  const momentDateTime = moment(\n    `${momentDate} ${currentMilitaryTime}`,\n    'MM/DD/YYYY HH:mm'\n  ).format();\n  return moment(momentDateTime).toDate().toISOString();\n};\n\nconst Admin = (props) => {\n  const [formData, setFormData] = useState({\n    companyName: '',\n    occupancyRule: '',\n    currentRules: '',\n    successMessage: '',\n    reservationClearOut: '12',\n  });\n  const [radioValue, setRadioValue] = useState('am');\n  const [isTimeError, setTimeError] = useState(false);\n\n  const checkInData = JSON.parse(localStorage.getItem('checkInHistory'))\n    .slice(0, 7)\n    .reverse();\n\n  const [open, setOpen] = useState(false);\n  const chartData = checkInData.map(\n    (item) => item.positiveCount + item.negativeCount\n  );\n\n  const [savedSuccessfully, setSavedSuccessfully] = useState(true);\n  const xAxis = checkInData.map(\n    (item) =>\n      `${daysOfTheWeek[new Date(item.Date).getDay()]} ${new Date(\n        item.Date\n      ).getMonth()}/${new Date(item.Date).getDate()}`\n  );\n  const lineChartInfo = {\n    labels: xAxis,\n    datasets: [\n      {\n        label: 'Attendance',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: '#288bea',\n        borderColor: '#288bea',\n        borderWidth: 3,\n        data: chartData,\n      },\n    ],\n  };\n\n  const lineChartOptions = {\n    title: {\n      display: true,\n      text: 'Attendance for Past Seven Days',\n      fontSize: 20,\n    },\n    legend: {\n      display: false,\n    },\n  };\n\n  useEffect(() => {\n    getSettings()\n      .then((res) => res.json())\n      .then((response) => {\n        setFormData({\n          ...response,\n          reservationClearOut: convertTo12Hour(response.reservationClearOut)[0],\n        });\n        setRadioValue(convertTo12Hour(response.reservationClearOut)[1]);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  const handleTextFieldChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.getAttribute('name')]: e.target.value,\n    });\n  };\n\n  const handleRadioChange = (e) => {\n    setRadioValue(e.target.value);\n  };\n\n  const handleTimeBlur = (e) => {\n    setTimeError(e.target.value <= 1 || e.target.value >= 12);\n  };\n\n  const handleClick = () => {\n    setSettings({\n      ...formData,\n      reservationClearOut: new Date(\n        convertHourToIsoDate(formData.reservationClearOut, radioValue)\n      ),\n    }).catch((e) => {\n      console.log(e);\n      setSavedSuccessfully(false);\n    });\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  };\n\n  return (\n    <BaseContainer>\n      <AdminForm>\n        <form>\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            fullWidth\n            type=\"text\"\n            placeholder=\"e.g. Headstorm\"\n            name=\"companyName\"\n            value={formData.companyName}\n            onChange={(e) => handleTextFieldChange(e)}\n            label=\"Company Name\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"number\"\n            name=\"occupancyRule\"\n            placeholder=\"e.g. 25\"\n            onChange={(e) => handleTextFieldChange(e)}\n            value={formData.occupancyRule}\n            fullWidth\n            label=\"Occupancy Rule\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"text\"\n            name=\"currentRules\"\n            placeholder=\"e.g. Rule 1, Rule 2, ...\"\n            onChange={(e) => handleTextFieldChange(e)}\n            value={formData.currentRules}\n            fullWidth\n            label=\"Current Rules\"\n          />\n          <StyledTextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            type=\"text\"\n            fullWidth\n            placeholder=\"e.g. Have a good day!\"\n            onChange={(e) => handleTextFieldChange(e)}\n            name=\"successMessage\"\n            value={formData.successMessage}\n            label=\"Success Message\"\n          />\n          <StyledNumberField\n            type=\"number\"\n            name=\"reservationClearOut\"\n            label=\"Reservation Reset\"\n            onChange={(e) => handleTextFieldChange(e)}\n            onBlur={(e) => handleTimeBlur(e)}\n            error={isTimeError}\n            helperText={!isTimeError || 'must be 1-12'}\n            value={formData.reservationClearOut}\n            InputProps={{ inputProps: { min: 0, max: 12 } }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <StyledRadioGroup\n            name=\"amPm\"\n            row\n            value={radioValue}\n            onChange={(e) => handleRadioChange(e)}\n          >\n            <FormControlLabel value=\"am\" control={<StyledRadio />} label=\"AM\" />\n            <FormControlLabel value=\"pm\" control={<StyledRadio />} label=\"PM\" />\n          </StyledRadioGroup>\n        </form>\n      </AdminForm>\n      <MiddleDiv>\n        <Line data={lineChartInfo} options={lineChartOptions} />\n      </MiddleDiv>\n      <FooterDiv>\n        <StyledSnackBar\n          autoHideDuration={3000}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n          open={open}\n          onClose={handleClose}\n        >\n          {savedSuccessfully ? (\n            <MuiAlert severity=\"success\">Saved</MuiAlert>\n          ) : (\n            <MuiAlert severity=\"error\">Error saving</MuiAlert>\n          )}\n        </StyledSnackBar>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          onClick={() => handleClick()}\n        >\n          Save\n        </StyledButton>\n      </FooterDiv>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(Admin);\n"],"sourceRoot":""}
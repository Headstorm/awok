{"version":3,"sources":["screens/GoodDay.js","common/DonutChart.js","common/InfoPopUp.js","screens/CheckIn.js","screens/COVIDCheck.js","screens/COVIDTestDate.js","screens/SymptomsScreen.js","screens/WFHConf.js","screens/Reservation.js","common/Header.js","common/Footer.js","screens/ViewReservations.js","common/dateFormat.js","App.js","serviceWorker.js","index.js","services/apiCalls.js","common/constants.js","headstorm_logo.png"],"names":["BaseContainer","styled","div","StyledButton","withStyles","root","color","backgroundColor","marginBottom","padding","width","Button","H2","p","Loading","Icon","StyledIcon","fontSize","CheckCircleIcon","withRouter","props","useState","count","setCount","loading","setLoading","useEffect","getCheckInCounts","then","res","json","response","today","positiveCount","negativeCount","catch","error","console","log","numPeopleMessage","CircularProgress","localStorage","getItem","STORAGE","SUCCESS_MESSAGE","size","variant","startIcon","onClick","path","PATHS","ROOT","history","push","DonutTrack","circle","Indicator","Indicator2","Donut","svg","Label","LabelsContainer","SVGLabel","DonutChart","circumference","Math","PI","halfSize","values","spotsOpen","totalOccupancy","spotsTaken","spotsReserved","strokeValues","map","val","trackStyle","strokeWidth","indicatorStyle","strokeDasharray","indicatorStyle2","height","className","r","cx","cy","transform","style","fill","Modal","ModalContent","Text","span","InfoPopUp","content","handleDismiss","HeaderDiv","H3","RemoteButton","borderColor","ReserveButton","nextPath","showInfoModal","setShowInfoModal","donutValue","setDonutVal","immuneCount","setImmuneCount","fineCount","setFineCount","reserveCount","setReserveCount","reserveCheckedIn","setReserveCheckedIn","OCCUPANCY_RULE","clearOutTime","Date","RESERVATION_CLEAR_OUT","toLocaleString","hour","minute","hour12","getSettings","setItem","successMessage","occupancyRule","CURRENT_RULES","currentRules","COMPANY_NAME","companyName","reservationClearOut","e","reservationsToday","reservationsTodayCheckedIn","hasCheckedInToday","CHECK_IN_DATE","toISOString","slice","checkedInCount","checkInDisabled","disabled","COVID_DATE","GOOD_DAY","COVID_CHECK","RESERVATION","WFH_CONFIRM","margin","Buttons","HeaderQuestion","h2","handleClick","isPositive","IS_POSITIVE","COVID_TEST_DATE","SYMPTOMS_SCREEN","CheckInButton","ButtonContainer","Form","form","CheckboxContainer","ColoredCheckBox","Checkbox","defaultDate","twoWeeksAgoDate","saveCovidDate","setSaveCovidDate","covidDate","setCovidDate","noValidate","TextField","type","defaultValue","onChange","target","value","FormControlLabel","control","label","COVID_POSITIVE","reservationCode","RESERVATION_CODE","patchCheckIn","removeItem","ButtonsContainer","StyledList","display","goodDay","SAFETY_REJECTION","checkin","additionalMessage","location","pathname","MONTHS","DaySelectionContainer","StyledButtonGroup","ButtonGroup","StyledTextField","StyledDivider","Divider","SelectedDays","StyledPressedButton","StyledUnpressedButton","Reservation","storedDays","setStoredDays","setReservationCode","getSpecificDay","numDay","setDate","getDate","getDay","getReadableDay","dateToConvert","split","month","parseInt","firstWeek","firstWeekEnd","secondWeek","secondWeekEnd","getButtons","startDay","d","x","storeValue","includes","key","filter","day","aria-label","sort","join","id","length","setReservation","dates","Logo","img","Count","showCheckInCount","ADMIN","numCheckedIn","setNumCheckedIn","JSON","stringify","src","HeadstormLogo","Copyright","Typography","Link","href","getFullYear","Container","useStyles","makeStyles","theme","flexDirection","alignItems","reservationList","textField","icon","textAlign","expiredIcon","reservationButton","styledIcon","reservedDays","setReservedDays","compare","a","b","resDate","checkInTodaysReservation","date","classes","isToday","getMonth","ReservationList","List","Object","reservation","labelId","ListItem","dense","ListItemSecondaryAction","checkedIn","expired","ListItemText","primary","event","reservationRetrievalCode","getReservation","resps","moment","format","window","innerHeight","Admin","lazy","App","CHECK_IN","SymptomsScreen","VIEW_RESERVATIONS","fallback","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","TestedPositive","resCode","resCodeQuery","fetch","method","mode","setSettings","settings","body","getAllReservations","CHECK_IN_HISTORY","module","exports"],"mappings":"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","file":"static/js/main.d02d19fb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { getCheckInCounts } from '../services/apiCalls'\nimport HomeIcon from '@material-ui/icons/Home';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { STORAGE, PATHS } from '../common/constants';\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: auto;\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n  justify-content: center;\n`;\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    padding: \".5rem 1.375rem\",\n    width: '50%',\n    'justify-self': 'center',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n    }\n  },\n}))(Button);\n\nconst H2 = styled.p`\n  text-align: center\n`;\n\nconst Loading = styled.div`\n  text-align: center;\n`;\n\nconst Icon = styled.div`\n  text-align: center;\n  color: #25db47;\n`;\n\nconst StyledIcon = withStyles(() => ({\n  root: {\n    fontSize: 50,\n  },\n}))(CheckCircleIcon);\n\nconst GoodDay = props => {\n  const nextPath = path => {\n    props.history.push(path);\n  };\n\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setCount(response.today.positiveCount + response.today.negativeCount);\n        setLoading(false);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const numPeopleMessage = count > 1 ? 'people checked in to go to the office today.'\n    : 'person checked in to go to the office today.';\n\n  return !loading ? (\n    <BaseContainer>\n      <Icon><StyledIcon/></Icon>\n      <H2>\n        You have checked in.\n        <br />\n        <b>{count}</b> {numPeopleMessage}\n        <br />\n        <br />\n        {localStorage.getItem(STORAGE.SUCCESS_MESSAGE)}\n      </H2>\n      <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<HomeIcon/>}\n          onClick={() => nextPath(PATHS.ROOT)}\n        >\n          Home Page\n      </StyledButton>\n    </BaseContainer>\n  ) : (<Loading>\n        <CircularProgress/>\n      </Loading>);\n};\n\nexport default withRouter(GoodDay);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DonutTrack = styled.circle`\n  fill: transparent;\n  stroke: #dae2e5;\n  stroke-width: 26;\n`;\n\nconst Indicator = styled.circle`\n  fill: transparent;\n  stroke: #80e27e;\n  stroke-width: 26;\n`;\n\nconst Indicator2 = styled.circle`\n  fill: transparent;\n  stroke: #8cbdff;\n  stroke-width: 26;\n`;\n\nconst Donut = styled.svg`\n  grid-column-start: 1;\n  margin: 0;\n  border-radius: 50%;\n  display: block;\n  padding: 1rem;\n`;\n\nconst Label = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`;\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  padding-bottom: 1rem;\n  justify-content: center;\n`;\n\nconst LabelsContainer = styled.div`\n  grid-column-start: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n`;\n\nconst SVGLabel = styled.svg`\n  height: 3rem;\n  width: 3rem;\n  margin: 0 auto;\n`;\n\nconst DonutChart = (props) => {\n  const size = 115;\n  const halfSize = size * 0.5;\n  const strokewidth = 26;\n  const radius = halfSize - strokewidth * 0.5;\n  const circumference = 2 * Math.PI * radius;\n\n  const values = props.values;\n\n  const spotsOpen =\n    props.totalOccupancy - props.spotsTaken - props.spotsReserved;\n\n  const strokeValues = values.map((val) => (val * circumference) / 100);\n\n  const dashValue = strokeValues[0] + ' ' + circumference;\n  const dashValue2 = strokeValues[1] + strokeValues[0] + ' ' + circumference;\n\n  const trackStyle = { strokeWidth: strokewidth };\n  const indicatorStyle = {\n    strokeWidth: strokewidth,\n    strokeDasharray: dashValue,\n  };\n  const indicatorStyle2 = {\n    strokeWidth: strokewidth,\n    strokeDasharray: dashValue2,\n  };\n  const rotateValue = 'rotate(-90 ' + halfSize + ',' + halfSize + ')';\n  return (\n    <BaseContainer>\n      <Donut width={size} height={size} className=\"donutchart\">\n        <DonutTrack\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={trackStyle}\n          className=\"donutchart-track\"\n        />\n        <Indicator2\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={indicatorStyle2}\n          className=\"donutchart-indicator\"\n        />\n        <Indicator\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={indicatorStyle}\n          className=\"donutchart-indicator\"\n        />\n      </Donut>\n      <LabelsContainer>\n        <Label>\n          <label>\n            <b>{spotsOpen}</b> Spots Open\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#DAE2E5\" />\n          </SVGLabel>\n        </Label>\n        <Label>\n          <label>\n            <b>{props.spotsTaken}</b> Checked In\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#80e27e\" />\n          </SVGLabel>\n        </Label>\n        <Label>\n          <label>\n            <b>{props.spotsReserved}</b> Reserved\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#8cbdff\" />\n          </SVGLabel>\n        </Label>\n      </LabelsContainer>\n    </BaseContainer>\n  );\n};\n\nexport default DonutChart;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  left: 10%;\n  right: 10%;\n  top: 10%;\n  bottom: 60%;\n  border-radius: 1px;\n  background: white;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n`;\n\nconst Text = styled.span`\n  color: #518dfd;\n  align-self: flex-end;\n`;\n\nconst InfoPopUp = (props) => {\n  return (\n    <Modal>\n      <ModalContent>\n        <p>\n          <b>Rules:</b>\n          <br/>\n          {props.content}\n        </p>\n        <Text onClick={() => props.handleDismiss()}>Dismiss</Text>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default InfoPopUp;\n","import React, { useState, useEffect } from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { getCheckInCounts, getSettings } from '../services/apiCalls';\nimport DonutChart from '../common/DonutChart';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport InfoPopUp from '../common/InfoPopUp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { PATHS, STORAGE } from '../common/constants';\n\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#518DFD',\n    marginBottom: '1rem',\n    padding: '.5rem 1.375rem',\n    'grid-row-start': 2,\n    'grid-column-start': 2,\n    'justify-self': 'center',\n    width: '50%',\n    '@media (max-width:425px)': { width: '100%' },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst HeaderDiv = styled.div`\n  grid-column-start: 2;\n  text-align: center;\n  align-content: space-between;\n`;\n\nconst H3 = styled.p`\n  text-align: center;\n`;\n\nconst Loading = styled.div`\n  text-align: center;\n`;\n\nconst Icon = styled.div`\n  text-align: center;\n  color: #25db47;\n`;\n\nconst StyledIcon = withStyles(() => ({\n  root: {\n    fontSize: 50,\n  },\n}))(CheckCircleIcon);\n\nconst RemoteButton = withStyles(() => ({\n  root: {\n    color: '#518DFD',\n    borderColor: '#518DFD',\n    'grid-row-start': 4,\n    'grid-column-start': 2,\n    'justify-self': 'center',\n    width: '50%',\n    '@media (max-width:425px)': { width: '100%' },\n  },\n}))(Button);\n\nconst ReserveButton = withStyles(() => ({\n  root: {\n    color: '#518DFD',\n    borderColor: '#518DFD',\n    'grid-row-start': 3,\n    'grid-column-start': 2,\n    'justify-self': 'center',\n    width: '50%',\n    '@media (max-width:425px)': { width: '100%' },\n  },\n}))(Button);\n\nconst CheckIn = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [donutValue, setDonutVal] = useState([0, 0]);\n  const [immuneCount, setImmuneCount] = useState(0);\n  const [fineCount, setFineCount] = useState(0);\n  const [reserveCount, setReserveCount] = useState(0);\n  const [reserveCheckedIn, setReserveCheckedIn] = useState(0)\n  const totalOccupancy = localStorage.getItem(STORAGE.OCCUPANCY_RULE);\n  const clearOutTime = new Date(\n    localStorage.getItem(STORAGE.RESERVATION_CLEAR_OUT)\n  ).toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  });\n  const [loading, setLoading] = useState(true);\n\n  const handleDismiss = () => {\n    setShowInfoModal(false);\n  };\n\n  useEffect(() => {\n    getSettings()\n      .then((res) => res.json())\n      .then((response) => {\n        localStorage.setItem(STORAGE.SUCCESS_MESSAGE, response.successMessage);\n        localStorage.setItem(STORAGE.OCCUPANCY_RULE, response.occupancyRule);\n        localStorage.setItem(STORAGE.CURRENT_RULES, response.currentRules);\n        localStorage.setItem(STORAGE.COMPANY_NAME, response.companyName);\n        localStorage.setItem(STORAGE.RESERVATION_CLEAR_OUT,\n          response.reservationClearOut\n        );\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setImmuneCount(response.today.positiveCount);\n        setFineCount(response.today.negativeCount);\n        setReserveCount(response.today.reservationsToday);\n        setReserveCheckedIn(response.today.reservationsTodayCheckedIn)\n        setDonutVal(\n          [\n            response.today.positiveCount + response.today.negativeCount + response.today.reservationsTodayCheckedIn,\n            response.today.reservationsToday,\n          ].map((val) => (val / totalOccupancy) * 100)\n        );\n      })\n      .catch((error) => console.log(error));\n  }, [totalOccupancy]);\n\n  const hasCheckedInToday =\n    localStorage.getItem(STORAGE.CHECK_IN_DATE) ===\n    new Date().toISOString().slice(0, 10);\n\n  const checkedInCount = immuneCount + fineCount + reserveCheckedIn\n  const checkInDisabled = checkedInCount === totalOccupancy;\n\n  return !loading ? (\n    <BaseContainer>\n      <HeaderDiv>\n        {!hasCheckedInToday ? null : (\n          <div>\n            <Icon>\n              <StyledIcon />\n            </Icon>\n            <p>You have checked in today!</p>\n            <br />\n          </div>\n        )}\n        <H3>\n          <b>{checkedInCount}</b> out of <b>{totalOccupancy}</b>{' '}\n          checked in\n          <InfoOutlinedIcon\n            fontSize=\"small\"\n            onClick={() => setShowInfoModal(true)}\n          />\n        </H3>\n        <h3>Today's checkins</h3>\n        <h4>Reservations expire at {clearOutTime}</h4>\n        <DonutChart\n          values={donutValue}\n          spotsTaken={checkedInCount}\n          spotsReserved={reserveCount}\n          totalOccupancy={totalOccupancy}\n        />\n      </HeaderDiv>\n      {!hasCheckedInToday ? (\n        <>\n          <StyledButton\n            size=\"large\"\n            variant=\"contained\"\n            disabled={checkInDisabled}\n            onClick={() => {\n              if (localStorage.getItem(STORAGE.COVID_DATE)) {\n                localStorage.setItem(\n                  STORAGE.CHECK_IN_DATE,\n                  new Date().toISOString().slice(0, 10)\n                );\n                nextPath(PATHS.GOOD_DAY);\n              } else {\n                nextPath(PATHS.COVID_CHECK);\n              }\n            }}\n          >\n            {!checkInDisabled ? 'Check In' : 'Sorry, capacity reached'}\n          </StyledButton>\n          <ReserveButton\n            size=\"large\"\n            variant=\"outlined\"\n            onClick={() => nextPath(PATHS.RESERVATION)}\n          >\n            Reserve\n          </ReserveButton>\n          <RemoteButton size=\"large\" onClick={() => nextPath(PATHS.WFH_CONFIRM)}>\n            I'm working remote today\n          </RemoteButton>\n        </>\n      ) : null}\n      {showInfoModal ? (\n        <InfoPopUp\n          handleDismiss={handleDismiss}\n          content={localStorage.getItem(STORAGE.CURRENT_RULES)}\n        />\n      ) : null}\n    </BaseContainer>\n  ) : (\n    <Loading>\n      <CircularProgress />\n    </Loading>\n  );\n};\n\nexport default withRouter(CheckIn);\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { STORAGE, PATHS } from '../common/constants';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    width: \"50%\",\n    margin: '1rem',\n    \"@media (max-width:425px)\": { width: \"100%\" },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(3, auto);\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst Buttons = styled.div`\n  grid-row-start: 2;\n  grid-column-start: 2;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  @media (max-width:425px) {\n    width: 100%;\n  }\n`;\n\nconst HeaderQuestion = styled.h2`\n  grid-row-start: 1;\n  grid-column-start: 2;\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst COVIDCheck = (props) => {\n  const handleClick = (path, isPositive) => {\n    localStorage.setItem(STORAGE.IS_POSITIVE, isPositive);\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        Have you ever tested positive for Covid-19?\n      </HeaderQuestion>\n      <Buttons>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<CheckIcon/>}\n          onClick={() => handleClick(PATHS.COVID_TEST_DATE, true)}\n        >\n          Yes\n        </StyledButton>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<ClearIcon/>}\n          onClick={() => handleClick(PATHS.SYMPTOMS_SCREEN, false)}\n        >\n          No\n        </StyledButton>\n      </Buttons>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  withStyles,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { patchCheckIn } from '../services/apiCalls';\nimport { STORAGE, PATHS } from '../common/constants';\n\nconst CheckInButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    width: \"50%\",\n    \"@media (max-width:425px)\": { width: \"100%\" },\n  },\n}))(Button);\n\nconst ButtonContainer = styled.div`\n  grid-row-start: 4;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(4, auto);\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 1rem;\n  grid-row-start: 1;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst Form = styled.form`\n  grid-row-start: 2;\n  grid-column-start: 2;\n  text-align: center;\n  padding-bottom: 2rem;\n`;\n\nconst CheckboxContainer = styled.div`\n  grid-row-start: 3;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst ColoredCheckBox = withStyles(() => ({\n  root: {\n    color: \"#518DFD\",\n  },\n}))(Checkbox);\n\nconst COVIDTestDate = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n  const today = new Date();\n  const defaultDate = today.toISOString().slice(0, 10);\n  const twoWeeksAgoDate = new Date(today - 1000 * 60 * 60 * 24 * 14)\n    .toISOString()\n    .slice(0, 10);\n  \n  const [saveCovidDate, setSaveCovidDate] = useState(false);\n  const [covidDate, setCovidDate] = useState(defaultDate);\n\n  const onDateChange = (e) => {\n    setCovidDate(e.target.value);\n  };\n  const onCheckInClick = () => {\n    if (covidDate >= twoWeeksAgoDate) {\n      nextPath(PATHS.COVID_POSITIVE);\n    } else {\n      const reservationCode = localStorage.getItem(STORAGE.RESERVATION_CODE);\n      const isPositive = localStorage.getItem(STORAGE.IS_POSITIVE)\n      if (reservationCode) {\n        patchCheckIn(isPositive, reservationCode)\n          .then(response => {\n            localStorage.removeItem(STORAGE.RESERVATION_CODE)\n          });\n      } else { patchCheckIn(isPositive); }\n      nextPath(PATHS.GOOD_DAY);\n      if (saveCovidDate) {\n        localStorage.setItem(STORAGE.COVID_DATE, covidDate);\n      }\n      localStorage.setItem(\n        STORAGE.CHECK_IN_DATE,\n        new Date().toISOString().slice(0, 10)\n      );\n    }\n  };\n\n  const onCheckboxChange = (e) => {\n    setSaveCovidDate(!saveCovidDate);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          When did you test positive?\n        </h2>\n      </HeaderDiv>\n      <Form noValidate>\n        <TextField\n          type=\"date\"\n          defaultValue={defaultDate}\n          onChange={onDateChange}\n        />\n      </Form>\n      <CheckboxContainer>\n        <FormControlLabel\n          control={<ColoredCheckBox color='#518DFD' onChange={onCheckboxChange} />}\n          label=\"Remember my answer on this device\"\n        />\n      </CheckboxContainer>\n      <ButtonContainer>\n        <CheckInButton\n          size=\"large\"\n          variant=\"contained\"\n          onClick={onCheckInClick}\n        >\n          Check In\n        </CheckInButton>\n      </ButtonContainer>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDTestDate);\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { patchCheckIn } from '../services/apiCalls';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { STORAGE, PATHS } from '../common/constants';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    width: \"50%\",\n    margin: '1rem',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n      margin: '.5rem'\n    },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0rem 2rem 0rem 2rem;\n  flex: 1 0;\n  align-items: center;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 0.5rem;\n  text-align: center;\n  h2 {\n    text-align: center;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  width: 60%;\n  text-align: center;\n  justify-content: center;\n  @media (max-width:425px) {\n    width: 100%;\n  }\n`;\n\nconst StyledList = withStyles(() => ({\n  root: {\n    display: 'inline-block',\n    'text-align': 'left',\n  },\n}))(Button);\n\nconst COVIDCheck = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  const goodDay = () => {\n    nextPath(PATHS.GOOD_DAY);\n    localStorage.setItem(\n      STORAGE.CHECK_IN_DATE,\n      new Date().toISOString().slice(0, 10)\n    );\n\n  }\n\n  const checkin = () => {\n    const isPositive = localStorage.getItem(STORAGE.IS_POSITIVE);\n    const reservationCode = localStorage.getItem(STORAGE.RESERVATION_CODE);\n\n    if (reservationCode) {\n      patchCheckIn(isPositive, reservationCode)\n        .then(response => {\n          goodDay();\n        });\n      localStorage.removeItem(STORAGE.RESERVATION_CODE)\n    }\n    else {\n      patchCheckIn(isPositive)\n        .then(response => {\n          goodDay();\n        });\n    }\n  }\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          Have you experienced any of the following in the last 2-14 days?\n        </h2>\n        <StyledList>\n          <li>Fever/Chills</li>\n          <li>Shortness of breath</li>\n          <li>Difficulty breathing</li>\n          <li>Sore throat</li>\n          <li>Congestion</li>\n          <li>Diarrhea</li>\n          <li>Fatigue</li>\n          <li>Headache</li>\n          <li>New loss of taste/smell</li>\n          <li>Muscle/Body aches</li>\n          <li>Cough</li>\n          <li>Runny nose</li>\n          <li>Nausea</li>\n          <li>Vomiting</li>\n        </StyledList>\n      </HeaderDiv>\n      <ButtonsContainer>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<CheckIcon />}\n          onClick={() => nextPath(PATHS.SAFETY_REJECTION)}\n        >\n          Yes\n        </StyledButton>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<ClearIcon />}\n          onClick={() => {\n            checkin()\n          }}\n        >\n          No\n        </StyledButton>\n      </ButtonsContainer>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport { PATHS } from '../common/constants';\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(3, auto);\n  grid-template-columns: repeat(5, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n  align-self: center;\n`;\n\nconst H2 = styled.p`\n  grid-row-start: 1;\n  grid-column-start: 3;\n  text-align: center;\n`;\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    padding: \".5rem 1.375rem\",\n    'grid-row-start': 2,\n    'grid-column-start': 3,\n    width: '50%',\n    'justify-self': 'center',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n    }\n  },\n}))(Button);\n\nconst WFHConf = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  let additionalMessage = null;\n  const prevPath = props.location.pathname;\n  switch(prevPath) {\n    case PATHS.SAFETY_REJECTION:\n      additionalMessage = (<>\n        Going to work with these symptoms puts the rest of your office at risk.\n        <br />\n        <br />\n        Please work from home today.\n        <br />\n        <br />\n      </>);\n      break;\n    case PATHS.COVID_POSITIVE:\n      additionalMessage = (<>\n        CDC Guidelines state \"Stay home until 14 days after your last exposure.\"\n        <br />\n        <br />\n        Please work from home today.\n        <br />\n        <br />\n      </>);\n      break;\n    default:\n      break;\n  }\n  return (\n    <BaseContainer>\n      <H2>\n        {additionalMessage}\n        Thank you for helping to keep the office safe and healthy.\n        <br />\n        <br />\n        Please remember to reach out to your Project Lead via Slack or email if\n        you need to take some time off\n      </H2>\n      <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<HomeIcon/>}\n          onClick={() => nextPath(PATHS.ROOT)}\n        >\n          Home Page\n      </StyledButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(WFHConf);\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { TextField, Divider, withStyles } from '@material-ui/core';\nimport styled from \"styled-components\";\nimport { setReservation } from '../services/apiCalls';\n\nconst MONTHS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst DaySelectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0.5rem;\n`;\n\nconst ReserveButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#518DFD',\n    width: '30%',\n    margin: '1rem',\n    '@media (max-width:425px)': { width: '75%' },\n  },\n}))(Button);\n\nconst StyledButtonGroup = withStyles(() => ({\n  root: {\n    margin: '.5rem .5rem 1rem .5rem',\n  },\n}))(ButtonGroup);\n\nconst Form = styled.form`\n  width: 30%;\n  margin-top: 1rem;\n  @media (max-width: 425px) {\n    width: 75%;\n  }\n`;\n\nconst StyledTextField = withStyles(() => ({\n  root: {\n    width: '100%',\n  },\n}))(TextField);\n\nconst StyledDivider = withStyles(() => ({\n  root: {\n    width: '35%',\n    margin: 0,\n    '@media (max-width:425px)': { width: '80%' },\n  },\n}))(Divider);\n\nconst SelectedDays = styled.p`\n  margin: 0.5rem;\n  width: 30%;\n  @media (max-width: 425px) {\n    width: 80%;\n  }\n`;\n\nconst StyledPressedButton = withStyles(() => ({\n  root: {\n    padding: '.5rem 1.5rem',\n    'background-color': '#518DFD',\n  },\n}))(Button);\n\nconst StyledUnpressedButton = withStyles(() => ({\n  root: {\n    padding: '.5rem 1.5rem',\n    'background-color': '#FFFFFF',\n  },\n}))(Button);\n\nconst Reservation = (props) => {\n  const [storedDays, setStoredDays] = useState([]);\n  const [reservationCode, setReservationCode] = useState('');\n\n  const getSpecificDay = (numDay) =>\n    new Date(\n      new Date().setDate(new Date().getDate() - new Date().getDay() + numDay)\n    )\n      .toISOString()\n      .slice(0, 10);\n\n  const getReadableDay = (dateToConvert) => {\n    const [month, numDay] = dateToConvert.slice(5).split('-');\n    return MONTHS[parseInt(month - 1)] + ' ' + numDay;\n  };\n\n  const today = new Date().toISOString().slice(0, 10);\n\n  const firstWeek = getReadableDay(getSpecificDay(1));\n  const firstWeekEnd = getReadableDay(getSpecificDay(5));\n  const secondWeek = getReadableDay(getSpecificDay(8));\n  const secondWeekEnd = getReadableDay(getSpecificDay(12));\n\n  const getButtons = (startDay) => {\n    return ['M', 'T', 'W', 'T', 'F'].map((d, x) => {\n      const storeValue = getSpecificDay(x + startDay);\n      const Button = storedDays.includes(storeValue)\n        ? StyledPressedButton\n        : StyledUnpressedButton;\n      return (\n        <Button\n          key={storeValue}\n          onClick={() => {\n            storedDays.includes(storeValue)\n              ? setStoredDays(storedDays.filter((day) => day !== storeValue))\n              : setStoredDays([...storedDays, storeValue]);\n          }}\n          variant={storedDays.includes(storeValue) ? 'contained' : ''}\n          disabled={storeValue < today}\n        >\n          {d}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <BaseContainer>\n      <DaySelectionContainer>\n        <h2>Reserve your days</h2>\n        <label>\n          Week of {firstWeek} - {firstWeekEnd}\n        </label>\n        <StyledButtonGroup\n          size=\"large\"\n          color=\"primary\"\n          aria-label=\"large outlined primary button\"\n        >\n          {getButtons(1)}\n        </StyledButtonGroup>\n        <label>\n          Week of {secondWeek} - {secondWeekEnd}\n        </label>\n        <StyledButtonGroup\n          size=\"large\"\n          color=\"primary\"\n          aria-label=\"large outlined primary button\"\n        >\n          {getButtons(8)}\n        </StyledButtonGroup>\n      </DaySelectionContainer>\n      <SelectedDays>\n        <b>Selected Days</b>\n      </SelectedDays>\n      <StyledDivider variant=\"middle\" />\n      <SelectedDays>\n        {storedDays\n          .sort()\n          .map((d) => getReadableDay(d))\n          .join(', ')}\n      </SelectedDays>\n      <Form noValidate>\n        <StyledTextField\n          id=\"outlined-basic\"\n          label=\"Reservation Retrival Code\"\n          variant=\"outlined\"\n          onChange={(e) => setReservationCode(e.target.value)}\n        />\n      </Form>\n      <ReserveButton\n        disabled={!(storedDays.length && reservationCode.length)}\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => setReservation({ dates: storedDays, reservationCode })}\n      >\n        Reserve\n      </ReserveButton>\n    </BaseContainer>\n  );\n};\n\nexport default Reservation;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getCheckInCounts } from '../services/apiCalls';\nimport HeadstormLogo from '../headstorm_logo.png';\nimport { withRouter } from 'react-router-dom';\nimport { PATHS } from '../common/constants';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1.5rem;\n  background-color: rgb(209, 224, 224, 30%);\n  border-bottom: 0.2rem solid #d1e0e0;\n  max-height: 1.5rem;\n`;\n\nconst Logo = styled.img`\n  width: 20%;\n  @media (max-width: 425px) {\n    width: 50%;\n  }\n`;\n\nconst Count = styled.div`\n  margin-left: auto;\n`;\n\nconst Header = (props) => {\n  const showCheckInCount = [PATHS.ROOT, PATHS.SAFETY_REJECTION, PATHS.GOOD_DAY, PATHS.ADMIN].includes(\n    props.location.pathname\n  )\n    ? false\n    : true;\n  const [numCheckedIn, setNumCheckedIn] = useState(0);\n  const totalOccupancy = localStorage.getItem('occupancyRule');\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setNumCheckedIn(\n          response.today.positiveCount + response.today.negativeCount + response.today.reservationsTodayCheckedIn\n        );\n        localStorage.setItem(\n          'checkInHistory',\n          JSON.stringify(response.history)\n        );\n      })\n      .catch((error) => console.log(error));\n  });\n\n  return (\n    <BaseContainer>\n      <Logo src={HeadstormLogo} />\n      {showCheckInCount ? (\n        <Count>\n          Checked In {numCheckedIn} / {totalOccupancy}\n        </Count>\n      ) : null}\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { Typography, Link, Container } from '@material-ui/core';\n\nconst BaseContainer = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background-color: #f0f2f2;\n  `;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://headstorm.com/\">\n        Headstorm\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst Footer = () => (\n  <BaseContainer>\n    <Container>\n      <Typography variant=\"body2\">\n        All answers are completely anonymous. We do not track your phone, location,\n        or anything about you.\n      </Typography>\n      <Copyright />\n    </Container>\n  </BaseContainer>\n);\n\nexport default withRouter(Footer);\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getReservation } from '../services/apiCalls';\nimport { TextField, Icon, ListItemSecondaryAction, ListItemText, Typography, List, Button, Container, ListItem } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { STORAGE, PATHS } from '../common/constants';\nimport { changeDateFormat } from '../common/dateFormat';\nimport EventBusyOutlinedIcon from '@material-ui/icons/EventBusyOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    reservationList: {\n        width: '50%',\n        '@media (max-width:425px)': { width: '100%' },\n    },\n    textField: {\n        marginBottom: '1rem',\n        width: '50%',\n        '@media (max-width:425px)': { width: '100%' },\n    },\n    icon: {\n        textAlign: 'center',\n        color: '#25db47',\n        fontSize: '1rem'\n    },\n    expiredIcon: {\n        textAlign: 'center',\n        color: '#ff3d00',\n        fontSize: '1rem'\n    },\n    reservationButton: {\n        color: '#FFFFFF',\n        backgroundColor: '#518DFD',\n        marginBottom: '1rem',\n        padding: '.5rem 1.375rem',\n        'grid-row-start': 2,\n        'grid-column-start': 2,\n        'justify-self': 'center',\n        width: '50%',\n        '@media (max-width:425px)': { width: '100%' },\n    },\n    styledIcon: {\n        fontSize: '1rem'\n    }\n}));\n\nconst ViewReservations = (props) => {\n    const [reservedDays, setReservedDays] = useState([]);\n    const [reservationCode, setReservationCode] = useState();\n\n    const compare = (a, b) => {\n        if (a.resDate > b.resDate) return 1;\n        if (b.resDate > a.resDate) return -1;\n\n        return 0;\n    }\n\n    const getReservedDays = (reservationRetrievalCode) => {\n        getReservation(reservationRetrievalCode)\n            .then((res) => res.json())\n            .then((response) => {\n                const resps = response.map((res) => {\n                    return {\n                        ...res,\n                        resDate: changeDateFormat(res.resDate)\n                    }\n                });\n                resps.sort(compare);\n                setReservedDays(resps);\n            })\n    };\n\n\n    const nextPath = (path) => {\n        props.history.push(path);\n    };\n\n    const checkInTodaysReservation = (date) => {\n        localStorage.setItem(STORAGE.RESERVATION_CODE, reservationCode);\n        nextPath(PATHS.COVID_CHECK);\n    }\n\n    const hasCheckedInToday =\n        localStorage.getItem(STORAGE.CHECK_IN_DATE) ===\n        new Date().toISOString().slice(0, 10);\n\n    const classes = useStyles();\n\n    const isToday = (date) => {\n        const today = new Date();\n        const value = new Date(date);\n\n        return value.getDate() === today.getDate() &&\n            value.getMonth() === today.getMonth() &&\n            value.getFullYear() === today.getFullYear();\n    };\n\n    const ReservationList = () => (\n        <List className={classes.reservationList}>\n            {\n                Object.values(reservedDays).map((reservation) => {\n                    const labelId = `reservation-list-label-${reservation.resDate}`;\n                    return (\n                        <ListItem key={reservation.resDate} dense>\n                            <ListItemSecondaryAction>\n                                {isToday(reservation.resDate) && !hasCheckedInToday && !reservation.checkedIn && !reservation.expired &&\n                                    <Button color=\"primary\" onClick={() => { checkInTodaysReservation(reservation.resDate) }} >Check In</Button>\n                                }\n                                {isToday(reservation.resDate) && hasCheckedInToday && reservation.checkedIn &&\n                                    <Icon className={classes.icon}>\n                                        Checked In <CheckCircleIcon className={classes.styledIcon} />\n                                    </Icon>\n                                }\n                                {isToday(reservation.resDate) && reservation.expired &&\n                                    < Icon className={classes.expiredIcon}>\n                                        Expired <EventBusyOutlinedIcon className={classes.styledIcon}></EventBusyOutlinedIcon>\n                                    </Icon>\n                                }\n\n                            </ListItemSecondaryAction>\n                            <ListItemText id={labelId} primary={`${reservation.resDate}`} />\n                        </ListItem>\n                    );\n                })\n            }\n        </List >\n    );\n\n    return (\n        <Container className={classes.root} >\n            {reservedDays &&\n                <ReservationList />\n            }\n            <TextField id=\"standard-basic\" className={classes.textField} label=\"Reservation Code\" value={reservationCode} onChange={(event) => { setReservationCode(event.target.value) }} />\n\n            <Button variant=\"contained\" className={classes.reservationButton} onClick={() => { getReservedDays(reservationCode) }}>\n                Get Reservations\n            </Button>\n\n            <Typography>You will only see a check in button if the reservation is for today.</Typography>\n\n        </Container >\n    );\n}\n\nexport default withRouter(ViewReservations);","import moment from 'moment'\n\nexport const changeDateFormat = date => {\n    return moment(date, 'YYYY-MM-DD').format('MM-DD-YYYY')\n}","import React, { Suspense, lazy } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport GoodDay from './screens/GoodDay';\nimport CheckIn from './screens/CheckIn';\nimport COVIDCheck from './screens/COVIDCheck';\nimport COVIDTestDate from './screens/COVIDTestDate';\nimport SymptomsScreen from './screens/SymptomsScreen';\nimport WFHConf from './screens/WFHConf';\nimport Reservation from './screens/Reservation';\nimport Header from './common/Header';\nimport Footer from './common/Footer';\nimport styled from 'styled-components';\nimport ViewReservation from './screens/ViewReservations';\nimport { PATHS } from './common/constants';\n\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  min-height: 100vh;\n  @media (max-width: 425px) {\t\n    min-height: ${window.innerHeight}px;\t\n  }\n`;\n\nconst Admin = lazy(() => import('./screens/Admin'));\n\nfunction App() {\n  return (\n    <Router>\n      <BaseContainer>\n        <Header />\n        <Switch>\n          <Route path={PATHS.CHECK_IN}>\n            <CheckIn />\n          </Route>\n          <Route path={PATHS.COVID_CHECK}>\n            <COVIDCheck />\n          </Route>\n          <Route path={PATHS.COVID_TEST_DATE}>\n            <COVIDTestDate />\n          </Route>\n          <Route path={PATHS.GOOD_DAY}>\n            <GoodDay />\n          </Route>\n          <Route path={PATHS.SYMPTOMS_SCREEN}>\n            <SymptomsScreen />\n          </Route>\n          <Route path={PATHS.SAFETY_REJECTION}>\n            <WFHConf />\n          </Route>\n          <Route path={PATHS.COVID_POSITIVE}>\n            <WFHConf />\n          </Route>\n          <Route path={PATHS.WFH_CONFIRM}>\n            <WFHConf />\n          </Route>\n          <Route path={PATHS.RESERVATION}>\n            <Reservation />\n          </Route>\n          <Route path={PATHS.VIEW_RESERVATIONS}>\n            <ViewReservation/>\n          </Route>\n          <Route path={PATHS.ADMIN}>\n            <Suspense fallback={<div>Loading</div>}>\n              <Admin />\n            </Suspense>\n          </Route>\n          <Route path=\"/\">\n            <CheckIn />\n          </Route>\n        </Switch>\n        <Footer />\n      </BaseContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const patchCheckIn = async (TestedPositive, resCode = null) => {\n  const resCodeQuery = resCode ? `&code=${resCode}` : ''\n  fetch(\n    `https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/employee-count?TestedPositive=${TestedPositive}${resCodeQuery}`,\n    {\n      method: 'PATCH',\n      mode: 'cors',\n    }\n  );\n};\n\nexport const getCheckInCounts = async () =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/employee-count',\n    {\n      mode: 'cors',\n    }\n  );\n\nexport const getSettings = async () =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/settings/Headstorm',\n    { mode: 'cors' }\n  );\n\nexport const setSettings = async (settings) =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/settings',\n    {\n      mode: 'cors',\n      method: 'POST',\n      body: JSON.stringify(settings),\n    }\n  );\n\nexport const setReservation = async (reservation) =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/reservations',\n    {\n      mode: 'cors',\n      method: 'POST',\n      body: JSON.stringify(reservation),\n    }\n  );\n\nexport const getReservation = async (reservationCode) =>\n  fetch(\n    `https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/reservations/?Code=${reservationCode}`,\n    { mode: 'cors' }\n  );\n\nexport const getAllReservations = async () =>\n  fetch(\n    `https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/reservations`,\n    { mode: 'cors' }\n  );","\nexport const STORAGE = {\n    RESERVATION_CODE: 'reservationCode',\n    RESERVATION_CLEAR_OUT: 'reservationClearOut',\n    SUCCESS_MESSAGE: 'successMessage',\n    OCCUPANCY_RULE: 'occupancyRule',\n    COMPANY_NAME: 'companyName',\n    IS_POSITIVE: 'isPositive',\n    CHECK_IN_DATE: 'checkInDate',\n    COVID_DATE: 'covidDate',\n    CURRENT_RULES: 'currentRules',\n    CHECK_IN_HISTORY: 'checkInHistory'\n}\n\nexport const PATHS = {\n    GOOD_DAY: '/good-day',\n    VIEW_RESERVATIONS: '/view-reservations',\n    SAFETY_REJECTION: '/safety-rejection',\n    COVID_TEST_DATE: '/covid-test-date',\n    COVID_CHECK: '/covid-check',\n    CHECK_IN: '/check-in',\n    SYMPTOMS_SCREEN: '/symptoms-screen',\n    COVID_POSITIVE: '/covid-positive',\n    WFH_CONFIRM: '/wfh-conf',\n    RESERVATION: '/reservation',\n    ADMIN: '/admin',\n    ROOT: '/'\n}","module.exports = __webpack_public_path__ + \"static/media/headstorm_logo.872b2a80.png\";"],"sourceRoot":""}
{"version":3,"sources":["screens/GoodDay.js","common/DonutChart.js","common/InfoPopUp.js","screens/CheckIn.js","screens/COVIDCheck.js","screens/COVIDTestDate.js","screens/SymptomsScreen.js","screens/WFHConf.js","screens/Reservation.js","common/Header.js","common/Footer.js","screens/ViewReservations.js","App.js","serviceWorker.js","index.js","services/apiCalls.js","headstorm_logo.png"],"names":["BaseContainer","styled","div","StyledButton","withStyles","root","color","backgroundColor","marginBottom","padding","width","Button","H2","p","Loading","Icon","StyledIcon","fontSize","CheckCircleIcon","withRouter","props","useState","count","setCount","loading","setLoading","useEffect","getCheckInCounts","then","res","json","response","today","positiveCount","negativeCount","catch","error","console","log","numPeopleMessage","CircularProgress","localStorage","getItem","size","variant","startIcon","onClick","path","history","push","DonutTrack","circle","Indicator","Indicator2","Donut","svg","Label","LabelsContainer","SVGLabel","DonutChart","circumference","Math","PI","halfSize","values","spotsOpen","totalOccupancy","spotsTaken","spotsReserved","strokeValues","map","val","trackStyle","strokeWidth","indicatorStyle","strokeDasharray","indicatorStyle2","height","className","r","cx","cy","transform","style","fill","Modal","ModalContent","Text","span","InfoPopUp","content","handleDismiss","HeaderDiv","H3","RemoteButton","borderColor","ReserveButton","nextPath","showInfoModal","setShowInfoModal","donutValue","setDonutVal","immuneCount","setImmuneCount","fineCount","setFineCount","reserveCount","setReserveCount","clearOutTime","Date","toLocaleString","hour","minute","hour12","getSettings","setItem","successMessage","occupancyRule","currentRules","companyName","reservationClearOut","e","reservationsToday","hasCheckedInToday","toISOString","slice","checkInDisabled","disabled","margin","Buttons","HeaderQuestion","h2","handleClick","isPositive","CheckInButton","ButtonContainer","Form","form","CheckboxContainer","ColoredCheckBox","Checkbox","defaultDate","twoWeeksAgoDate","saveCovidDate","setSaveCovidDate","covidDate","setCovidDate","noValidate","TextField","type","defaultValue","onChange","target","value","FormControlLabel","control","label","patchCheckIn","ButtonsContainer","StyledList","display","additionalMessage","location","pathname","MONTHS","DaySelectionContainer","StyledButtonGroup","ButtonGroup","StyledTextField","StyledDivider","Divider","SelectedDays","StyledPressedButton","StyledUnpressedButton","Reservation","storedDays","setStoredDays","reservationCode","setReservationCode","getSpecificDay","numDay","setDate","getDate","getDay","getReadableDay","dateToConvert","split","month","parseInt","firstWeek","firstWeekEnd","secondWeek","secondWeekEnd","getButtons","startDay","d","x","storeValue","includes","key","filter","day","aria-label","sort","join","id","length","setReservation","dates","Logo","img","Count","showCheckInCount","numCheckedIn","setNumCheckedIn","JSON","stringify","src","HeadstormLogo","Copyright","Typography","Link","href","getFullYear","Container","useStyles","makeStyles","theme","flexDirection","alignItems","reservationList","textField","icon","textAlign","reservationButton","styledIcon","reservedDays","setReservedDays","checkInTodaysReservation","date","classes","isToday","getMonth","ReservationList","List","Object","labelId","ListItem","role","undefined","dense","ListItemSecondaryAction","ListItemText","primary","event","reservationRetrievalCode","getReservation","resps","resDate","window","innerHeight","Admin","lazy","App","SymptomsScreen","fallback","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","TestedPositive","a","fetch","method","mode","setSettings","settings","body","reservation","module","exports"],"mappings":"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","file":"static/js/main.b071d949.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { getCheckInCounts } from '../services/apiCalls'\nimport HomeIcon from '@material-ui/icons/Home';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: auto;\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n  justify-content: center;\n`;\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    padding: \".5rem 1.375rem\",\n    width: '50%',\n    'justify-self': 'center',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n    }\n  },\n}))(Button);\n\nconst H2 = styled.p`\n  text-align: center\n`;\n\nconst Loading = styled.div`\n  text-align: center;\n`;\n\nconst Icon = styled.div`\n  text-align: center;\n  color: #25db47;\n`;\n\nconst StyledIcon = withStyles(() => ({\n  root: {\n    fontSize: 50,\n  },\n}))(CheckCircleIcon);\n\nconst GoodDay = props => {\n  const nextPath = path => {\n    props.history.push(path);\n  };\n\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setCount(response.today.positiveCount + response.today.negativeCount);\n        setLoading(false);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const numPeopleMessage = count > 1 ? 'people checked in to go to the office today.'\n    : 'person checked in to go to the office today.';\n\n  return !loading ? (\n    <BaseContainer>\n      <Icon><StyledIcon/></Icon>\n      <H2>\n        You have checked in.\n        <br />\n        <b>{count}</b> {numPeopleMessage}\n        <br />\n        <br />\n        {localStorage.getItem('successMessage')}\n      </H2>\n      <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<HomeIcon/>}\n          onClick={() => nextPath('/')}\n        >\n          Home Page\n      </StyledButton>\n    </BaseContainer>\n  ) : (<Loading>\n        <CircularProgress/>\n      </Loading>);\n};\n\nexport default withRouter(GoodDay);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DonutTrack = styled.circle`\n  fill: transparent;\n  stroke: #dae2e5;\n  stroke-width: 26;\n`;\n\nconst Indicator = styled.circle`\n  fill: transparent;\n  stroke: #80e27e;\n  stroke-width: 26;\n`;\n\nconst Indicator2 = styled.circle`\n  fill: transparent;\n  stroke: #8cbdff;\n  stroke-width: 26;\n`;\n\nconst Donut = styled.svg`\n  grid-column-start: 1;\n  margin: 0;\n  border-radius: 50%;\n  display: block;\n  padding: 1rem;\n`;\n\nconst Label = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`;\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  padding-bottom: 1rem;\n  justify-content: center;\n`;\n\nconst LabelsContainer = styled.div`\n  grid-column-start: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n`;\n\nconst SVGLabel = styled.svg`\n  height: 3rem;\n  width: 3rem;\n  margin: 0 auto;\n`;\n\nconst DonutChart = (props) => {\n  const size = 115;\n  const halfSize = size * 0.5;\n  const strokewidth = 26;\n  const radius = halfSize - strokewidth * 0.5;\n  const circumference = 2 * Math.PI * radius;\n\n  const values = props.values;\n\n  const spotsOpen =\n    props.totalOccupancy - props.spotsTaken - props.spotsReserved;\n\n  const strokeValues = values.map((val) => (val * circumference) / 100);\n\n  const dashValue = strokeValues[0] + ' ' + circumference;\n  const dashValue2 = strokeValues[1] + strokeValues[0] + ' ' + circumference;\n\n  const trackStyle = { strokeWidth: strokewidth };\n  const indicatorStyle = {\n    strokeWidth: strokewidth,\n    strokeDasharray: dashValue,\n  };\n  const indicatorStyle2 = {\n    strokeWidth: strokewidth,\n    strokeDasharray: dashValue2,\n  };\n  const rotateValue = 'rotate(-90 ' + halfSize + ',' + halfSize + ')';\n  return (\n    <BaseContainer>\n      <Donut width={size} height={size} className=\"donutchart\">\n        <DonutTrack\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={trackStyle}\n          className=\"donutchart-track\"\n        />\n        <Indicator2\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={indicatorStyle2}\n          className=\"donutchart-indicator\"\n        />\n        <Indicator\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={indicatorStyle}\n          className=\"donutchart-indicator\"\n        />\n      </Donut>\n      <LabelsContainer>\n        <Label>\n          <label>\n            <b>{spotsOpen}</b> Spots Open\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#DAE2E5\" />\n          </SVGLabel>\n        </Label>\n        <Label>\n          <label>\n            <b>{props.spotsTaken}</b> Checked In\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#80e27e\" />\n          </SVGLabel>\n        </Label>\n        <Label>\n          <label>\n            <b>{props.spotsReserved}</b> Reserved\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#8cbdff\" />\n          </SVGLabel>\n        </Label>\n      </LabelsContainer>\n    </BaseContainer>\n  );\n};\n\nexport default DonutChart;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  left: 10%;\n  right: 10%;\n  top: 10%;\n  bottom: 60%;\n  border-radius: 1px;\n  background: white;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n`;\n\nconst Text = styled.span`\n  color: #518dfd;\n  align-self: flex-end;\n`;\n\nconst InfoPopUp = (props) => {\n  return (\n    <Modal>\n      <ModalContent>\n        <p>\n          <b>Rules:</b>\n          <br/>\n          {props.content}\n        </p>\n        <Text onClick={() => props.handleDismiss()}>Dismiss</Text>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default InfoPopUp;\n","import React, { useState, useEffect } from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { getCheckInCounts, getSettings } from '../services/apiCalls';\nimport DonutChart from '../common/DonutChart';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport InfoPopUp from '../common/InfoPopUp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#518DFD',\n    marginBottom: '1rem',\n    padding: '.5rem 1.375rem',\n    'grid-row-start': 2,\n    'grid-column-start': 2,\n    'justify-self': 'center',\n    width: '50%',\n    '@media (max-width:425px)': { width: '100%' },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst HeaderDiv = styled.div`\n  grid-column-start: 2;\n  text-align: center;\n  align-content: space-between;\n`;\n\nconst H3 = styled.p`\n  text-align: center;\n`;\n\nconst Loading = styled.div`\n  text-align: center;\n`;\n\nconst Icon = styled.div`\n  text-align: center;\n  color: #25db47;\n`;\n\nconst StyledIcon = withStyles(() => ({\n  root: {\n    fontSize: 50,\n  },\n}))(CheckCircleIcon);\n\nconst RemoteButton = withStyles(() => ({\n  root: {\n    color: '#518DFD',\n    borderColor: '#518DFD',\n    'grid-row-start': 4,\n    'grid-column-start': 2,\n    'justify-self': 'center',\n    width: '50%',\n    '@media (max-width:425px)': { width: '100%' },\n  },\n}))(Button);\n\nconst ReserveButton = withStyles(() => ({\n  root: {\n    color: '#518DFD',\n    borderColor: '#518DFD',\n    'grid-row-start': 3,\n    'grid-column-start': 2,\n    'justify-self': 'center',\n    width: '50%',\n    '@media (max-width:425px)': { width: '100%' },\n  },\n}))(Button);\n\nconst CheckIn = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [donutValue, setDonutVal] = useState([0, 0]);\n  const [immuneCount, setImmuneCount] = useState(0);\n  const [fineCount, setFineCount] = useState(0);\n  const [reserveCount, setReserveCount] = useState(0);\n  const totalOccupancy = localStorage.getItem('occupancyRule');\n  const clearOutTime = new Date(\n    localStorage.getItem('reservationClearOut')\n  ).toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  });\n  const [loading, setLoading] = useState(true);\n\n  const handleDismiss = () => {\n    setShowInfoModal(false);\n  };\n\n  useEffect(() => {\n    getSettings()\n      .then((res) => res.json())\n      .then((response) => {\n        localStorage.setItem('successMessage', response.successMessage);\n        localStorage.setItem('occupancyRule', response.occupancyRule);\n        localStorage.setItem('currentRules', response.currentRules);\n        localStorage.setItem('companyName', response.companyName);\n        localStorage.setItem(\n          'reservationClearOut',\n          response.reservationClearOut\n        );\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setImmuneCount(response.today.positiveCount);\n        setFineCount(response.today.negativeCount);\n        setReserveCount(response.today.reservationsToday);\n        setDonutVal(\n          [\n            response.today.positiveCount + response.today.negativeCount,\n            response.today.reservationsToday,\n          ].map((val) => (val / totalOccupancy) * 100)\n        );\n      })\n      .catch((error) => console.log(error));\n  }, [totalOccupancy]);\n\n  const hasCheckedInToday =\n    localStorage.getItem('checkInDate') ===\n    new Date().toISOString().slice(0, 10);\n\n  const checkInDisabled = immuneCount + fineCount === totalOccupancy;\n\n  return !loading ? (\n    <BaseContainer>\n      <HeaderDiv>\n        {!hasCheckedInToday ? null : (\n          <div>\n            <Icon>\n              <StyledIcon />\n            </Icon>\n            <p>You have checked in today!</p>\n            <br />\n          </div>\n        )}\n        <H3>\n          <b>{immuneCount + fineCount}</b> out of <b>{totalOccupancy}</b>{' '}\n          checked in\n          <InfoOutlinedIcon\n            fontSize=\"small\"\n            onClick={() => setShowInfoModal(true)}\n          />\n        </H3>\n        <h3>Today's checkins</h3>\n        <h4>Reservations expire at {clearOutTime}</h4>\n        <DonutChart\n          values={donutValue}\n          spotsTaken={immuneCount + fineCount}\n          spotsReserved={reserveCount}\n          totalOccupancy={totalOccupancy}\n        />\n      </HeaderDiv>\n      {!hasCheckedInToday ? (\n        <>\n          <StyledButton\n            size=\"large\"\n            variant=\"contained\"\n            disabled={checkInDisabled}\n            onClick={() => {\n              if (localStorage.getItem('covidDate')) {\n                localStorage.setItem(\n                  'checkInDate',\n                  new Date().toISOString().slice(0, 10)\n                );\n                nextPath('/good-day');\n              } else {\n                nextPath('/covid-check');\n              }\n            }}\n          >\n            {!checkInDisabled ? 'Check In' : 'Sorry, capacity reached'}\n          </StyledButton>\n          <ReserveButton\n            size=\"large\"\n            variant=\"outlined\"\n            onClick={() => nextPath('/reservation')}\n          >\n            Reserve\n          </ReserveButton>\n          <RemoteButton size=\"large\" onClick={() => nextPath('/wfh-conf')}>\n            I'm working remote today\n          </RemoteButton>\n        </>\n      ) : null}\n      {showInfoModal ? (\n        <InfoPopUp\n          handleDismiss={handleDismiss}\n          content={localStorage.getItem('currentRules')}\n        />\n      ) : null}\n    </BaseContainer>\n  ) : (\n    <Loading>\n      <CircularProgress />\n    </Loading>\n  );\n};\n\nexport default withRouter(CheckIn);\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    width: \"50%\",\n    margin: '1rem',\n    \"@media (max-width:425px)\": { width: \"100%\" },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(3, auto);\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst Buttons = styled.div`\n  grid-row-start: 2;\n  grid-column-start: 2;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  @media (max-width:425px) {\n    width: 100%;\n  }\n`;\n\nconst HeaderQuestion = styled.h2`\n  grid-row-start: 1;\n  grid-column-start: 2;\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst COVIDCheck = (props) => {\n  const handleClick = (path, isPositive) => {\n    localStorage.setItem(\"isPositive\", isPositive);\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        Have you ever tested positive for Covid-19?\n      </HeaderQuestion>\n      <Buttons>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<CheckIcon/>}\n          onClick={() => handleClick(\"/covid-test-date\", true)}\n        >\n          Yes\n        </StyledButton>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<ClearIcon/>}\n          onClick={() => handleClick(\"/symptoms-screen\", false)}\n        >\n          No\n        </StyledButton>\n      </Buttons>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  withStyles,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { patchCheckIn } from '../services/apiCalls';\n\nconst CheckInButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    width: \"50%\",\n    \"@media (max-width:425px)\": { width: \"100%\" },\n  },\n}))(Button);\n\nconst ButtonContainer = styled.div`\n  grid-row-start: 4;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(4, auto);\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 1rem;\n  grid-row-start: 1;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst Form = styled.form`\n  grid-row-start: 2;\n  grid-column-start: 2;\n  text-align: center;\n  padding-bottom: 2rem;\n`;\n\nconst CheckboxContainer = styled.div`\n  grid-row-start: 3;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst ColoredCheckBox = withStyles(() => ({\n  root: {\n    color: \"#518DFD\",\n  },\n}))(Checkbox);\n\nconst COVIDTestDate = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n  const today = new Date();\n  const defaultDate = today.toISOString().slice(0, 10);\n  const twoWeeksAgoDate = new Date(today - 1000 * 60 * 60 * 24 * 14)\n    .toISOString()\n    .slice(0, 10);\n  \n  const [saveCovidDate, setSaveCovidDate] = useState(false);\n  const [covidDate, setCovidDate] = useState(defaultDate);\n\n  const onDateChange = (e) => {\n    setCovidDate(e.target.value);\n  };\n  const onCheckInClick = () => {\n    if (covidDate >= twoWeeksAgoDate) {\n      nextPath(\"/covid-positive\");\n    } else {\n      patchCheckIn(localStorage.getItem(\"isPositive\"));\n      nextPath(\"/good-day\");\n      if (saveCovidDate) {\n        localStorage.setItem(\"covidDate\", covidDate);\n      }\n      localStorage.setItem(\n        \"checkInDate\",\n        new Date().toISOString().slice(0, 10)\n      );\n    }\n  };\n\n  const onCheckboxChange = (e) => {\n    setSaveCovidDate(!saveCovidDate);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          When did you test positive?\n        </h2>\n      </HeaderDiv>\n      <Form noValidate>\n        <TextField\n          type=\"date\"\n          defaultValue={defaultDate}\n          onChange={onDateChange}\n        />\n      </Form>\n      <CheckboxContainer>\n        <FormControlLabel\n          control={<ColoredCheckBox color='#518DFD' onChange={onCheckboxChange} />}\n          label=\"Remember my answer on this device\"\n        />\n      </CheckboxContainer>\n      <ButtonContainer>\n        <CheckInButton\n          size=\"large\"\n          variant=\"contained\"\n          onClick={onCheckInClick}\n        >\n          Check In\n        </CheckInButton>\n      </ButtonContainer>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDTestDate);\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { patchCheckIn } from '../services/apiCalls';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    width: \"50%\",\n    margin: '1rem',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n      margin: '.5rem'\n    },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0rem 2rem 0rem 2rem;\n  flex: 1 0;\n  align-items: center;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 0.5rem;\n  text-align: center;\n  h2 {\n    text-align: center;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  width: 60%;\n  text-align: center;\n  justify-content: center;\n  @media (max-width:425px) {\n    width: 100%;\n  }\n`;\n\nconst StyledList = withStyles(() => ({\n  root: {\n    display: 'inline-block',\n    'text-align': 'left',\n  },\n}))(Button);\n\nconst COVIDCheck = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          Have you experienced any of the following in the last 2-14 days?\n        </h2>\n          <StyledList>\n            <li>Fever/Chills</li>\n            <li>Shortness of breath</li>\n            <li>Difficulty breathing</li>\n            <li>Sore throat</li>\n            <li>Congestion</li>\n            <li>Diarrhea</li>\n            <li>Fatigue</li>\n            <li>Headache</li>\n            <li>New loss of taste/smell</li>\n            <li>Muscle/Body aches</li>\n            <li>Cough</li>\n            <li>Runny nose</li>\n            <li>Nausea</li>\n            <li>Vomiting</li>\n          </StyledList>\n      </HeaderDiv>\n      <ButtonsContainer>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<CheckIcon/>}\n          onClick={() => nextPath(\"/safety-rejection\")}\n        >\n          Yes\n        </StyledButton>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<ClearIcon/>}\n          onClick={() => {\n            patchCheckIn(localStorage.getItem(\"isPositive\"))\n              .then(response => {\n                props.history.push(\"/good-day\");\n                localStorage.setItem(\n                  \"checkInDate\",\n                  new Date().toISOString().slice(0, 10)\n                );\n              })\n          }}\n        >\n          No\n        </StyledButton>\n      </ButtonsContainer>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(3, auto);\n  grid-template-columns: repeat(5, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n  align-self: center;\n`;\n\nconst H2 = styled.p`\n  grid-row-start: 1;\n  grid-column-start: 3;\n  text-align: center;\n`;\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    padding: \".5rem 1.375rem\",\n    'grid-row-start': 2,\n    'grid-column-start': 3,\n    width: '50%',\n    'justify-self': 'center',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n    }\n  },\n}))(Button);\n\nconst WFHConf = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  let additionalMessage = null;\n  const prevPath = props.location.pathname;\n  switch(prevPath) {\n    case '/safety-rejection':\n      additionalMessage = (<>\n        Going to work with these symptoms puts the rest of your office at risk.\n        <br />\n        <br />\n        Please work from home today.\n        <br />\n        <br />\n      </>);\n      break;\n    case '/covid-positive':\n      additionalMessage = (<>\n        CDC Guidelines state \"Stay home until 14 days after your last exposure.\"\n        <br />\n        <br />\n        Please work from home today.\n        <br />\n        <br />\n      </>);\n      break;\n    default:\n      break;\n  }\n  return (\n    <BaseContainer>\n      <H2>\n        {additionalMessage}\n        Thank you for helping to keep the office safe and healthy.\n        <br />\n        <br />\n        Please remember to reach out to your Project Lead via Slack or email if\n        you need to take some time off\n      </H2>\n      <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<HomeIcon/>}\n          onClick={() => nextPath('/')}\n        >\n          Home Page\n      </StyledButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(WFHConf);\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { TextField, Divider, withStyles } from '@material-ui/core';\nimport styled from \"styled-components\";\nimport { setReservation } from '../services/apiCalls';\n\nconst MONTHS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst DaySelectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0.5rem;\n`;\n\nconst ReserveButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#518DFD',\n    width: '30%',\n    margin: '1rem',\n    '@media (max-width:425px)': { width: '75%' },\n  },\n}))(Button);\n\nconst StyledButtonGroup = withStyles(() => ({\n  root: {\n    margin: '.5rem .5rem 1rem .5rem',\n  },\n}))(ButtonGroup);\n\nconst Form = styled.form`\n  width: 30%;\n  margin-top: 1rem;\n  @media (max-width: 425px) {\n    width: 75%;\n  }\n`;\n\nconst StyledTextField = withStyles(() => ({\n  root: {\n    width: '100%',\n  },\n}))(TextField);\n\nconst StyledDivider = withStyles(() => ({\n  root: {\n    width: '35%',\n    margin: 0,\n    '@media (max-width:425px)': { width: '80%' },\n  },\n}))(Divider);\n\nconst SelectedDays = styled.p`\n  margin: 0.5rem;\n  width: 30%;\n  @media (max-width: 425px) {\n    width: 80%;\n  }\n`;\n\nconst StyledPressedButton = withStyles(() => ({\n  root: {\n    padding: '.5rem 1.5rem',\n    'background-color': '#518DFD',\n  },\n}))(Button);\n\nconst StyledUnpressedButton = withStyles(() => ({\n  root: {\n    padding: '.5rem 1.5rem',\n    'background-color': '#FFFFFF',\n  },\n}))(Button);\n\nconst Reservation = (props) => {\n  const [storedDays, setStoredDays] = useState([]);\n  const [reservationCode, setReservationCode] = useState('');\n\n  const getSpecificDay = (numDay) =>\n    new Date(\n      new Date().setDate(new Date().getDate() - new Date().getDay() + numDay)\n    )\n      .toISOString()\n      .slice(0, 10);\n\n  const getReadableDay = (dateToConvert) => {\n    const [month, numDay] = dateToConvert.slice(5).split('-');\n    return MONTHS[parseInt(month - 1)] + ' ' + numDay;\n  };\n\n  const today = new Date().toISOString().slice(0, 10);\n\n  const firstWeek = getReadableDay(getSpecificDay(1));\n  const firstWeekEnd = getReadableDay(getSpecificDay(5));\n  const secondWeek = getReadableDay(getSpecificDay(8));\n  const secondWeekEnd = getReadableDay(getSpecificDay(12));\n\n  const getButtons = (startDay) => {\n    return ['M', 'T', 'W', 'T', 'F'].map((d, x) => {\n      const storeValue = getSpecificDay(x + startDay);\n      const Button = storedDays.includes(storeValue)\n        ? StyledPressedButton\n        : StyledUnpressedButton;\n      return (\n        <Button\n          key={storeValue}\n          onClick={() => {\n            storedDays.includes(storeValue)\n              ? setStoredDays(storedDays.filter((day) => day !== storeValue))\n              : setStoredDays([...storedDays, storeValue]);\n          }}\n          variant={storedDays.includes(storeValue) ? 'contained' : ''}\n          disabled={storeValue < today}\n        >\n          {d}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <BaseContainer>\n      <DaySelectionContainer>\n        <h2>Reserve your days</h2>\n        <label>\n          Week of {firstWeek} - {firstWeekEnd}\n        </label>\n        <StyledButtonGroup\n          size=\"large\"\n          color=\"primary\"\n          aria-label=\"large outlined primary button\"\n        >\n          {getButtons(1)}\n        </StyledButtonGroup>\n        <label>\n          Week of {secondWeek} - {secondWeekEnd}\n        </label>\n        <StyledButtonGroup\n          size=\"large\"\n          color=\"primary\"\n          aria-label=\"large outlined primary button\"\n        >\n          {getButtons(8)}\n        </StyledButtonGroup>\n      </DaySelectionContainer>\n      <SelectedDays>\n        <b>Selected Days</b>\n      </SelectedDays>\n      <StyledDivider variant=\"middle\" />\n      <SelectedDays>\n        {storedDays\n          .sort()\n          .map((d) => getReadableDay(d))\n          .join(', ')}\n      </SelectedDays>\n      <Form noValidate>\n        <StyledTextField\n          id=\"outlined-basic\"\n          label=\"Reservation Retrival Code\"\n          variant=\"outlined\"\n          onChange={(e) => setReservationCode(e.target.value)}\n        />\n      </Form>\n      <ReserveButton\n        disabled={!(storedDays.length && reservationCode.length)}\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => setReservation({ dates: storedDays, reservationCode })}\n      >\n        Reserve\n      </ReserveButton>\n    </BaseContainer>\n  );\n};\n\nexport default Reservation;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getCheckInCounts } from '../services/apiCalls';\nimport HeadstormLogo from '../headstorm_logo.png';\nimport { withRouter } from 'react-router-dom';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1.5rem;\n  background-color: rgb(209, 224, 224, 30%);\n  border-bottom: 0.2rem solid #d1e0e0;\n  max-height: 1.5rem;\n`;\n\nconst Logo = styled.img`\n  width: 20%;\n  @media (max-width: 425px) {\n    width: 50%;\n  }\n`;\n\nconst Count = styled.div`\n  margin-left: auto;\n`;\n\nconst Header = (props) => {\n  const showCheckInCount = ['/', '/safety-rejection', '/good-day', '/admin'].includes(\n    props.location.pathname\n  )\n    ? false\n    : true;\n  const [numCheckedIn, setNumCheckedIn] = useState(0);\n  const totalOccupancy = localStorage.getItem('occupancyRule');\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setNumCheckedIn(\n          response.today.positiveCount + response.today.negativeCount\n        );\n        localStorage.setItem(\n          'checkInHistory',\n          JSON.stringify(response.history)\n        );\n      })\n      .catch((error) => console.log(error));\n  });\n\n  return (\n    <BaseContainer>\n      <Logo src={HeadstormLogo} />\n      {showCheckInCount ? (\n        <Count>\n          Checked In {numCheckedIn} / {totalOccupancy}\n        </Count>\n      ) : null}\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { Typography, Link, Container } from '@material-ui/core';\n\nconst BaseContainer = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background-color: #f0f2f2;\n  `;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://headstorm.com/\">\n        Headstorm\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst Footer = () => (\n  <BaseContainer>\n    <Container>\n      <Typography variant=\"body2\">\n        All answers are completely anonymous. We do not track your phone, location,\n        or anything about you.\n      </Typography>\n      <Copyright />\n    </Container>\n  </BaseContainer>\n);\n\nexport default withRouter(Footer);\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getReservation } from '../services/apiCalls';\nimport { TextField, Icon, ListItemSecondaryAction, ListItemText, Typography, List, Button, Container, ListItem } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    reservationList: {\n        width: '50%',\n        '@media (max-width:425px)': { width: '100%' },\n    },\n    textField: {\n        marginBottom: '1rem',\n        width: '50%',\n        '@media (max-width:425px)': { width: '100%' },\n    },\n    icon: {\n        textAlign: 'center',\n        color: '#25db47',\n        fontSize: '1rem'\n    },\n    reservationButton: {\n        color: '#FFFFFF',\n        backgroundColor: '#518DFD',\n        marginBottom: '1rem',\n        padding: '.5rem 1.375rem',\n        'grid-row-start': 2,\n        'grid-column-start': 2,\n        'justify-self': 'center',\n        width: '50%',\n        '@media (max-width:425px)': { width: '100%' },\n    },\n    styledIcon: {\n        fontSize: '1rem'\n    }\n}));\n\nconst ViewReservations = (props) => {\n    const [reservedDays, setReservedDays] = useState([]);\n    const [reservationCode, setReservationCode] = useState();\n\n    const getReservedDays = (reservationRetrievalCode) => {\n        getReservation(reservationRetrievalCode)\n            .then((res) => res.json())\n            .then((response) => {\n                const resps = response.map(res => res.resDate);\n                setReservedDays(resps);\n            })\n    };\n\n    const nextPath = (path) => {\n        props.history.push(path);\n    };\n\n    const checkInTodaysReservation = (date) => {\n        console.log(\"checking in\" + date);\n        localStorage.setItem('reservationCode', reservationCode);\n        nextPath('/covid-check');\n    }\n\n    const hasCheckedInToday =\n        localStorage.getItem('checkInDate') ===\n        new Date().toISOString().slice(0, 10);\n\n    const classes = useStyles();\n\n    const isToday = (date) => {\n        const today = new Date();\n        const value = new Date(date);\n\n        return value.getDate() === today.getDate() &&\n            value.getMonth() === today.getMonth() &&\n            value.getFullYear() === today.getFullYear();\n    };\n\n    const ReservationList = () => (\n        <List className={classes.reservationList}>\n            {\n                Object.values(reservedDays).map((value) => {\n                    const labelId = `reservation-list-label-${value}`;\n\n                    return (\n                        <ListItem key={value} role={undefined} dense>\n                            <ListItemSecondaryAction>\n                                {isToday(value) && !hasCheckedInToday &&\n                                    <Button color=\"primary\" onClick={() => { checkInTodaysReservation(value) }} >Check In</Button>\n                                }\n                                {isToday(value) && hasCheckedInToday &&\n                                    <Icon className={classes.icon}>\n                                       Checked In <CheckCircleIcon className={classes.styledIcon}/>\n                                    </Icon>\n                                }\n                            </ListItemSecondaryAction>\n                            <ListItemText id={labelId} primary={`${value}`} />\n                        </ListItem>\n                    );\n                })\n            }\n        </List>\n    );\n\n    return (\n        <Container className={classes.root} >\n            {reservedDays &&\n                <ReservationList />\n            }\n            <TextField id=\"standard-basic\" className={classes.textField} label=\"Reservation Code\" value={reservationCode} onChange={(event) => { setReservationCode(event.target.value) }} />\n\n            <Button variant=\"contained\" className={classes.reservationButton} onClick={() => { getReservedDays(reservationCode) }}>\n                Get Reservations\n            </Button>\n\n            <Typography>You will only see a check in button if the reservation is for today.</Typography>\n\n        </Container >\n    );\n}\n\nexport default withRouter(ViewReservations);","import React, { Suspense, lazy } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport GoodDay from './screens/GoodDay';\nimport CheckIn from './screens/CheckIn';\nimport COVIDCheck from './screens/COVIDCheck';\nimport COVIDTestDate from './screens/COVIDTestDate';\nimport SymptomsScreen from './screens/SymptomsScreen';\nimport WFHConf from './screens/WFHConf';\nimport Reservation from './screens/Reservation';\nimport Header from './common/Header';\nimport Footer from './common/Footer';\nimport styled from 'styled-components';\nimport ViewReservation from './screens/ViewReservations';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  min-height: 100vh;\n  @media (max-width: 425px) {\t\n    min-height: ${window.innerHeight}px;\t\n  }\n`;\n\nconst Admin = lazy(() => import('./screens/Admin'));\n\nfunction App() {\n  return (\n    <Router>\n      <BaseContainer>\n        <Header />\n        <Switch>\n          <Route path=\"/check-in\">\n            <CheckIn />\n          </Route>\n          <Route path=\"/covid-check\">\n            <COVIDCheck />\n          </Route>\n          <Route path=\"/covid-test-date\">\n            <COVIDTestDate />\n          </Route>\n          <Route path=\"/good-day\">\n            <GoodDay />\n          </Route>\n          <Route path=\"/symptoms-screen\">\n            <SymptomsScreen />\n          </Route>\n          <Route path=\"/safety-rejection\">\n            <WFHConf />\n          </Route>\n          <Route path=\"/covid-positive\">\n            <WFHConf />\n          </Route>\n          <Route path=\"/wfh-conf\">\n            <WFHConf />\n          </Route>\n          <Route path=\"/reservation\">\n            <Reservation />\n          </Route>\n          <Route path=\"/viewReservations\">\n            <ViewReservation/>\n          </Route>\n          <Route path=\"/admin\">\n            <Suspense fallback={<div>Loading</div>}>\n              <Admin />\n            </Suspense>\n          </Route>\n          <Route path=\"/\">\n            <CheckIn />\n          </Route>\n        </Switch>\n        <Footer />\n      </BaseContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const patchCheckIn = async (TestedPositive) => {\n  fetch(\n    `https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/employee-count?TestedPositive=${TestedPositive}`,\n    {\n      method: 'PATCH',\n      mode: 'cors',\n    }\n  );\n};\n\nexport const getCheckInCounts = async () =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/employee-count',\n    {\n      mode: 'cors',\n    }\n  );\n\nexport const getSettings = async () =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/settings/Headstorm',\n    { mode: 'cors' }\n  );\n\nexport const setSettings = async (settings) =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/settings',\n    {\n      mode: 'cors',\n      method: 'POST',\n      body: JSON.stringify(settings),\n    }\n  );\n\nexport const setReservation = async (reservation) =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/reservations',\n    {\n      mode: 'cors',\n      method: 'POST',\n      body: JSON.stringify(reservation),\n    }\n  );\n\nexport const getReservation = async (reservationCode) =>\n  fetch(\n    `https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/reservations/?Code=${reservationCode}`,\n    { mode: 'cors' }\n  );\n\nexport const getAllReservations = async () =>\n  fetch(\n    `https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/reservations`,\n    { mode: 'cors' }\n  );\n","module.exports = __webpack_public_path__ + \"static/media/headstorm_logo.872b2a80.png\";"],"sourceRoot":""}
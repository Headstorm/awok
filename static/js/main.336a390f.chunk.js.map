{"version":3,"sources":["screens/GoodDay.js","apiCalls.js","screens/CheckIn.js","screens/AlertsOptIn.js","screens/COVIDCheck.js","screens/COVIDTestDate.js","screens/SafetyRejection.js","screens/SymptomsScreen.js","screens/WFHConf.js","screens/COVIDPostive.js","App.js","serviceWorker.js","index.js"],"names":["BaseContainer","styled","div","GoodDay","props","getCheckInCounts","a","fetch","mode","SignInButton","withStyles","root","color","backgroundColor","marginBottom","Button","WorkRemoteButton","HeaderDiv","FooterDiv","Immune","Fine","withRouter","nextPath","path","history","push","useState","immuneCount","setImmuneCount","fineCount","setFineCount","percentOccupation","useEffect","then","res","json","response","positiveCount","negativeCount","catch","error","console","log","LinearProgress","variant","value","size","onClick","YesButton","NoButton","handleClick","TestedPositive","localStorage","getItem","method","noValidate","TextField","fullWidth","label","FormControlLabel","control","Checkbox","borderColor","HeaderQuestion","h2","isPositive","setItem","CheckInButton","covidDate","setCovidDate","today","Date","defaultDate","toISOString","slice","twoWeeksAgoDate","type","defaultValue","onChange","e","target","GoingHomeButton","WFHConf","App","SymptomsScreen","COVIDPostive","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.336a390f.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  margin: 10rem 2rem 0rem 2rem;\n`;\n\nconst GoodDay = (props) => {\n  return (\n    <BaseContainer>\n      <h2>\n        Have a great day!\n        <br />\n        <br />\n        Lawrence says\n        <br />\n        \"Get to work\"\n      </h2>\n    </BaseContainer>\n  );\n};\n\nexport default GoodDay;\n","export const patchCheckIn = (TestedPositive) => {\n  fetch(\n    `https://crhs49zgsk.execute-api.us-east-2.amazonaws.com/default/project-reckoning/employee-count?TestedPositive=${TestedPositive}`,\n    {\n      method: 'PATCH',\n      mode: 'cors',\n    }\n  );\n};\n\nexport const getCheckInCounts = async () =>\n  fetch(\n    'https://crhs49zgsk.execute-api.us-east-2.amazonaws.com/default/project-reckoning/employee-count',\n    {\n      mode: 'cors',\n    }\n  );\n","import React, { useState, useEffect } from 'react';\nimport { Button, withStyles, LinearProgress } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { getCheckInCounts } from '../apiCalls';\n\nconst SignInButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst WorkRemoteButton = withStyles(() => ({\n  root: {\n    color: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 8rem 2rem 0rem 2rem;\n`;\n\nconst HeaderDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: space-between;\n`;\n\nconst FooterDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Immune = styled.div`\n  background-color: #50c02e;\n\n  h2 {\n    margin-left: 1rem;\n  }\n`;\n\nconst Fine = styled.div`\n  background-color: #e1e1e1;\n  margin: 1rem 0rem;\n\n  h2 {\n    margin-left: 1rem;\n  }\n`;\n\nconst CheckIn = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  const [immuneCount, setImmuneCount] = useState(0);\n  // eslint-disable-next-line no-unused-vars\n  const [fineCount, setFineCount] = useState(0);\n  const totalOccupancy = 25;\n  const percentOccupation = ((immuneCount + fineCount) / totalOccupancy) * 100;\n\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setImmuneCount(response.positiveCount);\n        setFineCount(response.negativeCount);\n      })\n      .catch((error) => console.log(error));\n  });\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <Immune>\n          <h2>{immuneCount} Immune to COVID</h2>\n        </Immune>\n        <Fine>\n          <h2>{fineCount} Feeling Fine</h2>\n        </Fine>\n        <LinearProgress variant=\"determinate\" value={percentOccupation} />\n        {percentOccupation}% Occupied\n      </HeaderDiv>\n      <FooterDiv>\n        <h2>\n          This app will ask you a few questions to help ensure a safe and\n          healthy workplace\n          <br />\n          <br />\n          All answers are completely anonymous. We do not track your phone,\n          location, or anything about you\n        </h2>\n        <SignInButton\n          size=\"large\"\n          variant=\"contained\"\n          onClick={() => nextPath('/covid-check')}\n        >\n          Sign In\n        </SignInButton>\n        <WorkRemoteButton onClick={() => nextPath('/good-day')}>\n          I'm going to work remote\n        </WorkRemoteButton>\n      </FooterDiv>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(CheckIn);\n","import React from 'react';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { patchCheckIn } from '../apiCalls';\n\nconst YesButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst NoButton = withStyles(() => ({\n  root: {\n    color: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 5rem 2rem 0rem 2rem;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 5rem;\n`;\n\nconst AlertsOptIn = (props) => {\n  const handleClick = (path) => {\n    patchCheckIn(localStorage.getItem('isPositive'));\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          Would you like to receive alerts for this office?\n          <br />\n          <br />\n          Your health status is never tied to your email address or phone\n          number. These are used for anonymous alerting only.\n        </h2>\n      </HeaderDiv>\n      <form noValidate>\n        <TextField fullWidth label=\"Email Address\" />\n        <TextField fullWidth label=\"Phone Number\" />\n      </form>\n      <FormControlLabel\n        control={<Checkbox />}\n        label=\"Remember my answer on this device\"\n      />\n      <YesButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => handleClick('/good-day')}\n      >\n        Yes\n      </YesButton>\n      <NoButton size=\"large\" onClick={() => handleClick('/good-day')}>\n        No thanks\n      </NoButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(AlertsOptIn);\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst YesButton = withStyles(() => ({\n  root: {\n    color: '#D96239',\n    borderColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst NoButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 15rem 2rem 0rem 2rem;\n`;\n\nconst HeaderQuestion = styled.h2`\n  margin-bottom: 16rem;\n`;\n\nconst COVIDCheck = (props) => {\n  const handleClick = (path, isPositive) => {\n    localStorage.setItem('isPositive', isPositive);\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        Have you ever tested positive for Covid-19?\n      </HeaderQuestion>\n      <YesButton\n        size=\"large\"\n        variant=\"outlined\"\n        onClick={() => handleClick('/covid-test-date', true)}\n      >\n        Yes\n      </YesButton>\n      <NoButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => handleClick('/symptoms-screen', false)}\n      >\n        No\n      </NoButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React, { useState } from 'react';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst CheckInButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem 2rem 0rem 2rem;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst COVIDTestDate = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  const [covidDate, setCovidDate] = useState();\n  const today = new Date();\n  const defaultDate = today.toISOString().slice(0,10);\n  const twoWeeksAgoDate = new Date(today-(1000 * 60 * 60 * 24 * 14)).toISOString().slice(0,10);\n\n  const onDateChange = (e) => { setCovidDate(e.target.value) }\n  const onCheckInClick = () => {\n    if(covidDate >= twoWeeksAgoDate) {\n      nextPath('/covid-positive')\n    } else {\n      nextPath('/alerts')\n    }\n  }\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          When did you test positive?\n          <br />\n          <br />\n          We will use this information to alert other people who have visited\n          this office.\n        </h2>\n      </HeaderDiv>\n      <form noValidate>\n        <TextField\n          type='date'\n          defaultValue={defaultDate}\n          onChange={onDateChange}\n        />\n      </form>\n      <FormControlLabel\n        control={<Checkbox />}\n        label=\"Remember my answer on this device\"\n      />\n      <CheckInButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={onCheckInClick}\n      >\n        Check In\n      </CheckInButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDTestDate);\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst GoingHomeButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 15rem 2rem 0rem 2rem;\n`;\n\nconst HeaderQuestion = styled.h2`\n  margin-bottom: 16rem;\n`;\n\nconst SafetyRejection = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        Going to work with these symptoms puts the rest of your office at risk.\n        <br />\n        <br />\n        Please work from home today.\n      </HeaderQuestion>\n      <GoingHomeButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => nextPath('/wfh-conf')}\n      >\n        Going back home\n      </GoingHomeButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(SafetyRejection);\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst YesButton = withStyles(() => ({\n  root: {\n    color: '#D96239',\n    borderColor: '#D96239',\n    marginBottom: '2rem',\n  },\n}))(Button);\n\nconst NoButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10rem 2rem 0rem 2rem;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 5rem;\n`;\n\nconst COVIDCheck = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          Have you experienced any of the following in the last 24 hours?\n          <br />\n          <br />\n          Loss of taste and smell <br />\n          Fever <br />\n          Dry Cough <br />\n          Sore Throat <br />\n          ...{' '}\n        </h2>\n      </HeaderDiv>\n      <YesButton\n        size=\"large\"\n        variant=\"outlined\"\n        onClick={() => nextPath('/safety-rejection')}\n      >\n        Yes\n      </YesButton>\n      <NoButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => nextPath('/alerts')}\n      >\n        No\n      </NoButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  margin: 10rem 2rem 0rem 2rem;\n`;\n\nconst WFHConf = (props) => {\n  return (\n    <BaseContainer>\n      <h2>\n        Thank you for helping to keep the office safe and healthy.\n        <br />\n        <br />\n        Please remember to reach out to your Project Lead via Slack or email if\n        you need to take some time off\n      </h2>\n    </BaseContainer>\n  );\n};\n\nexport default WFHConf;\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst GoingHomeButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#D96239',\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2rem 2rem 0rem 2rem;\n`;\n\nconst HeaderQuestion = styled.h2`\n  margin-bottom: 2rem;\n`;\n\nconst COVIDPositive = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        CDC Guidelines state \"Stay home until 14 days after your last exposure\"\n        <br />\n        <br />\n        Please work from home today.\n      </HeaderQuestion>\n      <GoingHomeButton\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => nextPath('/wfh-conf')}\n      >\n        Going back home\n      </GoingHomeButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDPositive);\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport GoodDay from './screens/GoodDay';\nimport CheckIn from './screens/CheckIn';\nimport AlertsOptIn from './screens/AlertsOptIn';\nimport COVIDCheck from './screens/COVIDCheck';\nimport COVIDTestDate from './screens/COVIDTestDate';\nimport SafetyRejection from './screens/SafetyRejection';\nimport SymptomsScreen from './screens/SymptomsScreen';\nimport WFHConf from './screens/WFHConf';\nimport COVIDPostive from './screens/COVIDPostive';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/alerts\">\n          <AlertsOptIn />\n        </Route>\n        <Route path=\"/check-in\">\n          <CheckIn />\n        </Route>\n        <Route path=\"/covid-check\">\n          <COVIDCheck />\n        </Route>\n        <Route path=\"/covid-test-date\">\n          <COVIDTestDate />\n        </Route>\n        <Route path=\"/good-day\">\n          <GoodDay />\n        </Route>\n        <Route path=\"/safety-rejection\">\n          <SafetyRejection />\n        </Route>\n        <Route path=\"/symptoms-screen\">\n          <SymptomsScreen />\n        </Route>\n        <Route path=\"/wfh-conf\">\n          <WFHConf />\n        </Route>\n        <Route path=\"/covid-positive\">\n          <COVIDPostive />\n        </Route>\n        <Route path=\"/\">\n          <CheckIn />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
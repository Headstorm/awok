{"version":3,"sources":["screens/GoodDay.js","common/DonutChart.js","common/InfoPopUp.js","screens/CheckIn.js","screens/COVIDCheck.js","screens/COVIDTestDate.js","screens/SymptomsScreen.js","screens/WFHConf.js","screens/Reservation.js","common/Header.js","common/Footer.js","App.js","serviceWorker.js","index.js","apiCalls.js","headstorm_logo.png"],"names":["BaseContainer","styled","div","StyledButton","withStyles","root","color","backgroundColor","marginBottom","padding","width","Button","H2","p","Loading","Icon","StyledIcon","fontSize","CheckCircleIcon","withRouter","props","useState","count","setCount","loading","setLoading","useEffect","getCheckInCounts","then","res","json","response","today","positiveCount","negativeCount","catch","error","console","log","numPeopleMessage","CircularProgress","localStorage","getItem","size","variant","startIcon","onClick","path","history","push","DonutTrack","circle","Indicator","Indicator2","Donut","svg","Label","LabelsContainer","SVGLabel","DonutChart","circumference","Math","PI","halfSize","values","spotsOpen","totalOccupancy","spotsTaken","spotsReserved","strokeValues","map","val","trackStyle","strokeWidth","indicatorStyle","strokeDasharray","indicatorStyle2","height","className","r","cx","cy","transform","style","fill","Modal","ModalContent","Text","span","InfoPopUp","content","handleDismiss","HeaderDiv","H3","RemoteButton","borderColor","nextPath","showInfoModal","setShowInfoModal","donutval","setDonutVal","immuneCount","setImmuneCount","fineCount","setFineCount","reserveCount","getSettings","setItem","successMessage","occupancyRule","currentRules","companyName","e","hasCheckedInToday","Date","toISOString","slice","checkInDisabled","disabled","margin","Buttons","HeaderQuestion","h2","handleClick","isPositive","CheckInButton","ButtonContainer","Form","form","CheckboxContainer","ColoredCheckBox","Checkbox","defaultDate","twoWeeksAgoDate","saveCovidDate","setSaveCovidDate","covidDate","setCovidDate","noValidate","TextField","type","defaultValue","onChange","target","value","FormControlLabel","control","label","patchCheckIn","ButtonsContainer","StyledList","display","additionalMessage","location","pathname","MONTHS","DaySelectionContainer","ReserveButton","StyledButtonGroup","ButtonGroup","StyledTextField","StyledDivider","Divider","SelectedDays","StyledPressedButton","StyledUnpressedButton","Reservation","storedDays","setStoredDays","reservationCode","setReservationCode","getSpecificDay","numDay","setDate","getDate","getDay","getReadableDay","dateToConvert","split","month","parseInt","firstWeek","firstWeekEnd","secondWeek","secondWeekEnd","getButtons","startDay","d","x","storeValue","includes","key","filter","day","aria-label","sort","join","id","length","Logo","img","Count","showCheckInCount","numCheckedIn","setNumCheckedIn","JSON","stringify","src","HeadstormLogo","Copyright","Typography","Link","href","getFullYear","Container","Admin","lazy","App","SymptomsScreen","fallback","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","TestedPositive","a","fetch","method","mode","setSettings","settings","body","module","exports"],"mappings":"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","file":"static/js/main.9683937b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { getCheckInCounts } from \"../apiCalls\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: auto;\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n  justify-content: center;\n`;\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    padding: \".5rem 1.375rem\",\n    width: '50%',\n    'justify-self': 'center',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n    }\n  },\n}))(Button);\n\nconst H2 = styled.p`\n  text-align: center\n`;\n\nconst Loading = styled.div`\n  text-align: center;\n`;\n\nconst Icon = styled.div`\n  text-align: center;\n  color: #25db47;\n`;\n\nconst StyledIcon = withStyles(() => ({\n  root: {\n    fontSize: 50,\n  },\n}))(CheckCircleIcon);\n\nconst GoodDay = props => {\n  const nextPath = path => {\n    props.history.push(path);\n  };\n\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setCount(response.today.positiveCount + response.today.negativeCount);\n        setLoading(false);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const numPeopleMessage = count > 1 ? 'people checked in to go to the office today.'\n    : 'person checked in to go to the office today.';\n\n  return !loading ? (\n    <BaseContainer>\n      <Icon><StyledIcon/></Icon>\n      <H2>\n        You have checked in.\n        <br />\n        <b>{count}</b> {numPeopleMessage}\n        <br />\n        <br />\n        {localStorage.getItem('successMessage')}\n      </H2>\n      <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<HomeIcon/>}\n          onClick={() => nextPath('/')}\n        >\n          Home Page\n      </StyledButton>\n    </BaseContainer>\n  ) : (<Loading>\n        <CircularProgress/>\n      </Loading>);\n};\n\nexport default withRouter(GoodDay);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DonutTrack = styled.circle`\n  fill: transparent;\n  stroke: #dae2e5;\n  stroke-width: 26;\n`;\n\nconst Indicator = styled.circle`\n  fill: transparent;\n  stroke: #80e27e;\n  stroke-width: 26;\n`;\n\nconst Indicator2 = styled.circle`\n  fill: transparent;\n  stroke: #8cbdff;\n  stroke-width: 26;\n`;\n\nconst Donut = styled.svg`\n  grid-column-start: 1;\n  margin: 0;\n  border-radius: 50%;\n  display: block;\n  padding: 1rem;\n`;\n\nconst Label = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`;\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  padding-bottom: 1rem;\n  justify-content: center;\n`;\n\nconst LabelsContainer = styled.div`\n  grid-column-start: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n`;\n\nconst SVGLabel = styled.svg`\n  height: 3rem;\n  width: 3rem;\n  margin: 0 auto;\n`;\n\nconst DonutChart = (props) => {\n  const size = 115;\n  const halfSize = size * 0.5;\n  const strokewidth = 26;\n  const radius = halfSize - strokewidth * 0.5;\n  const circumference = 2 * Math.PI * radius;\n\n  const values = props.values;\n\n  const spotsOpen =\n    props.totalOccupancy - props.spotsTaken - props.spotsReserved;\n\n  const strokeValues = values.map((val) => (val * circumference) / 100);\n\n  const dashValue = strokeValues[0] + ' ' + circumference;\n  const dashValue2 = strokeValues[1] + strokeValues[0] + ' ' + circumference;\n\n  const trackStyle = { strokeWidth: strokewidth };\n  const indicatorStyle = {\n    strokeWidth: strokewidth,\n    strokeDasharray: dashValue,\n  };\n  const indicatorStyle2 = {\n    strokeWidth: strokewidth,\n    strokeDasharray: dashValue2,\n  };\n  const rotateValue = 'rotate(-90 ' + halfSize + ',' + halfSize + ')';\n  return (\n    <BaseContainer>\n      <Donut width={size} height={size} className=\"donutchart\">\n        <DonutTrack\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={trackStyle}\n          className=\"donutchart-track\"\n        />\n        <Indicator2\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={indicatorStyle2}\n          className=\"donutchart-indicator\"\n        />\n        <Indicator\n          r={radius}\n          cx={halfSize}\n          cy={halfSize}\n          transform={rotateValue}\n          style={indicatorStyle}\n          className=\"donutchart-indicator\"\n        />\n      </Donut>\n      <LabelsContainer>\n        <Label>\n          <label>\n            <b>{spotsOpen}</b> Spots Open\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#DAE2E5\" />\n          </SVGLabel>\n        </Label>\n        <Label>\n          <label>\n            <b>{props.spotsTaken}</b> Checked In\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#80e27e\" />\n          </SVGLabel>\n        </Label>\n        <Label>\n          <label>\n            <b>{props.spotsReserved}</b> Reserved\n          </label>\n          <SVGLabel>\n            <circle cx={20} cy={20} r={10} fill=\"#8cbdff\" />\n          </SVGLabel>\n        </Label>\n      </LabelsContainer>\n    </BaseContainer>\n  );\n};\n\nexport default DonutChart;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  left: 10%;\n  right: 10%;\n  top: 10%;\n  bottom: 60%;\n  border-radius: 1px;\n  background: white;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n`;\n\nconst Text = styled.span`\n  color: #518dfd;\n  align-self: flex-end;\n`;\n\nconst InfoPopUp = (props) => {\n  return (\n    <Modal>\n      <ModalContent>\n        <p>\n          <b>Rules:</b>\n          <br/>\n          {props.content}\n        </p>\n        <Text onClick={() => props.handleDismiss()}>Dismiss</Text>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default InfoPopUp;\n","import React, { useState, useEffect } from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { getCheckInCounts, getSettings } from '../apiCalls';\nimport DonutChart from '../common/DonutChart';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport InfoPopUp from '../common/InfoPopUp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: '#FFFFFF',\n    backgroundColor: '#518DFD',\n    marginBottom: '1rem',\n    padding: '.5rem 1.375rem',\n    'grid-row-start': 2,\n    'grid-column-start': 2,\n    'justify-self': 'center',\n    width: '50%',\n    '@media (max-width:425px)': { width: '100%' },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst HeaderDiv = styled.div`\n  grid-column-start: 2;\n  text-align: center;\n  align-content: space-between;\n`;\n\nconst H3 = styled.p`\n  text-align: center;\n`;\n\nconst Loading = styled.div`\n  text-align: center;\n`;\n\nconst Icon = styled.div`\n  text-align: center;\n  color: #25db47;\n`;\n\nconst StyledIcon = withStyles(() => ({\n  root: {\n    fontSize: 50,\n  },\n}))(CheckCircleIcon);\n\nconst RemoteButton = withStyles(() => ({\n  root: {\n    color: '#518DFD',\n    borderColor: '#518DFD',\n    'grid-row-start': 4,\n    'grid-column-start': 2,\n    'justify-self': 'center',\n    width: '50%',\n    '@media (max-width:425px)': { width: '100%' },\n  },\n}))(Button);\n\n// const ReserveButton = withStyles(() => ({\n//   root: {\n//     color: '#518DFD',\n//     borderColor: '#518DFD',\n//     'grid-row-start': 3,\n//     'grid-column-start': 2,\n//     'justify-self': 'center',\n//     width: '50%',\n//     '@media (max-width:425px)': { width: '100%' },\n//   },\n// }))(Button);\n\nconst CheckIn = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [donutval, setDonutVal] = useState([0, 0]);\n  const [immuneCount, setImmuneCount] = useState(0);\n  const [fineCount, setFineCount] = useState(0);\n  // eslint-disable-next-line no-unused-vars\n  const [reserveCount, setReserveCount] = useState(0);\n  const totalOccupancy = localStorage.getItem('occupancyRule');\n  // pull the time from local storage when that gets set localStorage.getItem('reservationClearOut')\n  // const clearOutTime = new Date(`1970-01-01T${'10:00'}Z`).toLocaleString(\n  //   'en-US',\n  //   {\n  //     hour: 'numeric',\n  //     minute: 'numeric',\n  //     hour12: true,\n  //     timeZone: 'UTC',\n  //   }\n  // );\n  const [loading, setLoading] = useState(true);\n\n  const handleDismiss = () => {\n    setShowInfoModal(false);\n  };\n\n  useEffect(() => {\n    getSettings()\n      .then((res) => res.json())\n      .then((response) => {\n        localStorage.setItem('successMessage', response.successMessage);\n        localStorage.setItem('occupancyRule', response.occupancyRule);\n        localStorage.setItem('currentRules', response.currentRules);\n        localStorage.setItem('companyName', response.companyName);\n        // localStorage.setItem('reservationClearOut', response.reservationClearOut);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setImmuneCount(response.today.positiveCount);\n        setFineCount(response.today.negativeCount);\n        // setReserveCount(response.today.reserveCount) un-comment when this is set up in api\n        setDonutVal(\n          // Add reserve count below when that api call becomes available\n          [response.today.positiveCount + response.today.negativeCount, 0].map(\n            (val) => (val / totalOccupancy) * 100\n          )\n        );\n      })\n      .catch((error) => console.log(error));\n  }, [totalOccupancy]);\n\n  const hasCheckedInToday =\n    localStorage.getItem('checkInDate') ===\n    new Date().toISOString().slice(0, 10);\n\n  const checkInDisabled = immuneCount + fineCount === totalOccupancy;\n\n  return !loading ? (\n    <BaseContainer>\n      <HeaderDiv>\n        {!hasCheckedInToday ? null : (\n          <div>\n            <Icon>\n              <StyledIcon />\n            </Icon>\n            <p>You have checked in today!</p>\n            <br />\n          </div>\n        )}\n        <H3>\n          <b>{immuneCount + fineCount}</b> out of <b>{totalOccupancy}</b>{' '}\n          checked in\n          <InfoOutlinedIcon\n            fontSize=\"small\"\n            onClick={() => setShowInfoModal(true)}\n          />\n        </H3>\n        <h3>Today's checkins</h3>\n        {/* uncomment below when we have reservations connected */}\n        {/* <h4>Reservations expire at {clearOutTime}</h4> */}\n        <DonutChart\n          values={donutval}\n          spotsTaken={immuneCount + fineCount}\n          spotsReserved={reserveCount}\n          totalOccupancy={totalOccupancy}\n        />\n      </HeaderDiv>\n      {!hasCheckedInToday ? (\n        <>\n          <StyledButton\n            size=\"large\"\n            variant=\"contained\"\n            disabled={checkInDisabled}\n            onClick={() => {\n              if (localStorage.getItem('covidDate')) {\n                localStorage.setItem(\n                  'checkInDate',\n                  new Date().toISOString().slice(0, 10)\n                );\n                nextPath('/good-day');\n              } else {\n                nextPath('/covid-check');\n              }\n            }}\n          >\n            {!checkInDisabled ? 'Check In' : 'Sorry, capacity reached'}\n          </StyledButton>\n          {/* <ReserveButton\n            size=\"large\"\n            variant=\"outlined\"\n            onClick={() => nextPath('/reservation')}\n          >\n            Reserve\n          </ReserveButton> */}\n          <RemoteButton size=\"large\" onClick={() => nextPath('/wfh-conf')}>\n            I'm working remote today\n          </RemoteButton>\n        </>\n      ) : null}\n      {showInfoModal ? (\n        <InfoPopUp\n          handleDismiss={handleDismiss}\n          content={localStorage.getItem('currentRules')}\n        />\n      ) : null}\n    </BaseContainer>\n  ) : (\n    <Loading>\n      <CircularProgress />\n    </Loading>\n  );\n};\n\nexport default withRouter(CheckIn);\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    width: \"50%\",\n    margin: '1rem',\n    \"@media (max-width:425px)\": { width: \"100%\" },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(3, auto);\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst Buttons = styled.div`\n  grid-row-start: 2;\n  grid-column-start: 2;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  @media (max-width:425px) {\n    width: 100%;\n  }\n`;\n\nconst HeaderQuestion = styled.h2`\n  grid-row-start: 1;\n  grid-column-start: 2;\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst COVIDCheck = (props) => {\n  const handleClick = (path, isPositive) => {\n    localStorage.setItem(\"isPositive\", isPositive);\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderQuestion>\n        Have you ever tested positive for Covid-19?\n      </HeaderQuestion>\n      <Buttons>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<CheckIcon/>}\n          onClick={() => handleClick(\"/covid-test-date\", true)}\n        >\n          Yes\n        </StyledButton>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<ClearIcon/>}\n          onClick={() => handleClick(\"/symptoms-screen\", false)}\n        >\n          No\n        </StyledButton>\n      </Buttons>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  withStyles,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { patchCheckIn } from \"../apiCalls\";\n\nconst CheckInButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    width: \"50%\",\n    \"@media (max-width:425px)\": { width: \"100%\" },\n  },\n}))(Button);\n\nconst ButtonContainer = styled.div`\n  grid-row-start: 4;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(4, auto);\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 1rem;\n  grid-row-start: 1;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst Form = styled.form`\n  grid-row-start: 2;\n  grid-column-start: 2;\n  text-align: center;\n  padding-bottom: 2rem;\n`;\n\nconst CheckboxContainer = styled.div`\n  grid-row-start: 3;\n  grid-column-start: 2;\n  text-align: center;\n`;\n\nconst ColoredCheckBox = withStyles(() => ({\n  root: {\n    color: \"#518DFD\",\n  },\n}))(Checkbox);\n\nconst COVIDTestDate = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n  const today = new Date();\n  const defaultDate = today.toISOString().slice(0, 10);\n  const twoWeeksAgoDate = new Date(today - 1000 * 60 * 60 * 24 * 14)\n    .toISOString()\n    .slice(0, 10);\n  \n  const [saveCovidDate, setSaveCovidDate] = useState(false);\n  const [covidDate, setCovidDate] = useState(defaultDate);\n\n  const onDateChange = (e) => {\n    setCovidDate(e.target.value);\n  };\n  const onCheckInClick = () => {\n    if (covidDate >= twoWeeksAgoDate) {\n      nextPath(\"/covid-positive\");\n    } else {\n      patchCheckIn(localStorage.getItem(\"isPositive\"));\n      nextPath(\"/good-day\");\n      if (saveCovidDate) {\n        localStorage.setItem(\"covidDate\", covidDate);\n      }\n      localStorage.setItem(\n        \"checkInDate\",\n        new Date().toISOString().slice(0, 10)\n      );\n    }\n  };\n\n  const onCheckboxChange = (e) => {\n    setSaveCovidDate(!saveCovidDate);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          When did you test positive?\n        </h2>\n      </HeaderDiv>\n      <Form noValidate>\n        <TextField\n          type=\"date\"\n          defaultValue={defaultDate}\n          onChange={onDateChange}\n        />\n      </Form>\n      <CheckboxContainer>\n        <FormControlLabel\n          control={<ColoredCheckBox color='#518DFD' onChange={onCheckboxChange} />}\n          label=\"Remember my answer on this device\"\n        />\n      </CheckboxContainer>\n      <ButtonContainer>\n        <CheckInButton\n          size=\"large\"\n          variant=\"contained\"\n          onClick={onCheckInClick}\n        >\n          Check In\n        </CheckInButton>\n      </ButtonContainer>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDTestDate);\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { patchCheckIn } from \"../apiCalls\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    width: \"50%\",\n    margin: '1rem',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n      margin: '.5rem'\n    },\n  },\n}))(Button);\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0rem 2rem 0rem 2rem;\n  flex: 1 0;\n  align-items: center;\n`;\n\nconst HeaderDiv = styled.div`\n  margin-bottom: 0.5rem;\n  text-align: center;\n  h2 {\n    text-align: center;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  width: 60%;\n  text-align: center;\n  justify-content: center;\n  @media (max-width:425px) {\n    width: 100%;\n  }\n`;\n\nconst StyledList = withStyles(() => ({\n  root: {\n    display: 'inline-block',\n    'text-align': 'left',\n  },\n}))(Button);\n\nconst COVIDCheck = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  return (\n    <BaseContainer>\n      <HeaderDiv>\n        <h2>\n          Have you experienced any of the following in the last 2-14 days?\n        </h2>\n          <StyledList>\n            <li>Fever/Chills</li>\n            <li>Shortness of breath</li>\n            <li>Difficulty breathing</li>\n            <li>Sore throat</li>\n            <li>Congestion</li>\n            <li>Diarrhea</li>\n            <li>Fatigue</li>\n            <li>Headache</li>\n            <li>New loss of taste/smell</li>\n            <li>Muscle/Body aches</li>\n            <li>Cough</li>\n            <li>Runny nose</li>\n            <li>Nausea</li>\n            <li>Vomiting</li>\n          </StyledList>\n      </HeaderDiv>\n      <ButtonsContainer>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<CheckIcon/>}\n          onClick={() => nextPath(\"/safety-rejection\")}\n        >\n          Yes\n        </StyledButton>\n        <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<ClearIcon/>}\n          onClick={() => {\n            patchCheckIn(localStorage.getItem(\"isPositive\"))\n              .then(response => {\n                props.history.push(\"/good-day\");\n                localStorage.setItem(\n                  \"checkInDate\",\n                  new Date().toISOString().slice(0, 10)\n                );\n              })\n          }}\n        >\n          No\n        </StyledButton>\n      </ButtonsContainer>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(COVIDCheck);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst BaseContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(3, auto);\n  grid-template-columns: repeat(5, auto);\n  grid-gap: 0.625rem;\n  padding: 0.625rem;\n  align-self: center;\n`;\n\nconst H2 = styled.p`\n  grid-row-start: 1;\n  grid-column-start: 3;\n  text-align: center;\n`;\n\nconst StyledButton = withStyles(() => ({\n  root: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#518DFD\",\n    marginBottom: \"2rem\",\n    padding: \".5rem 1.375rem\",\n    'grid-row-start': 2,\n    'grid-column-start': 3,\n    width: '50%',\n    'justify-self': 'center',\n    \"@media (max-width:425px)\": {\n      width: \"100%\",\n    }\n  },\n}))(Button);\n\nconst WFHConf = (props) => {\n  const nextPath = (path) => {\n    props.history.push(path);\n  };\n\n  let additionalMessage = null;\n  const prevPath = props.location.pathname;\n  switch(prevPath) {\n    case '/safety-rejection':\n      additionalMessage = (<>\n        Going to work with these symptoms puts the rest of your office at risk.\n        <br />\n        <br />\n        Please work from home today.\n        <br />\n        <br />\n      </>);\n      break;\n    case '/covid-positive':\n      additionalMessage = (<>\n        CDC Guidelines state \"Stay home until 14 days after your last exposure.\"\n        <br />\n        <br />\n        Please work from home today.\n        <br />\n        <br />\n      </>);\n      break;\n    default:\n      break;\n  }\n  return (\n    <BaseContainer>\n      <H2>\n        {additionalMessage}\n        Thank you for helping to keep the office safe and healthy.\n        <br />\n        <br />\n        Please remember to reach out to your Project Lead via Slack or email if\n        you need to take some time off\n      </H2>\n      <StyledButton\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<HomeIcon/>}\n          onClick={() => nextPath('/')}\n        >\n          Home Page\n      </StyledButton>\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(WFHConf);\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { TextField, Divider, withStyles } from '@material-ui/core';\nimport styled from \"styled-components\";\n\nconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\nconst BaseContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst DaySelectionContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tmargin: .5rem;\n`;\n\nconst ReserveButton = withStyles(() => ({\n\troot: {\n\t\tcolor: '#FFFFFF',\n\t\tbackgroundColor: '#518DFD',\n\t\twidth: '30%',\n\t\tmargin: '1rem',\n\t\t\"@media (max-width:425px)\": { width: \"75%\" },\n\t},\n}))(Button);\n\nconst StyledButtonGroup = withStyles(() => ({\n\troot: {\n\t\tmargin: '.5rem .5rem 1rem .5rem',\n\t}\n}))(ButtonGroup)\n\nconst Form = styled.form`\n\twidth: 30%;\n\tmargin-top: 1rem;\n\t@media (max-width:425px) {\n\t\twidth: 75%;\n\t},\n`;\n\nconst StyledTextField = withStyles(() => ({\n\troot: {\n\t\twidth: '100%',\n\t}\n}))(TextField)\n\nconst StyledDivider = withStyles(() => ({\n\troot: {\n\t\twidth: '35%',\n\t\tmargin: 0,\n\t\t\"@media (max-width:425px)\": { width: \"80%\" },\n\t}\n}))(Divider)\n\nconst SelectedDays = styled.p`\n\tmargin: .5rem;\n\twidth: 30%;\n\t@media (max-width:425px) {\n\t\twidth: 80%;\n\t},\n`;\n\nconst StyledPressedButton = withStyles(() => ({\n\troot: {\n\t\tpadding: '.5rem 1.5rem',\n\t\t'background-color': '#518DFD',\n\t}\n}))(Button)\n\nconst StyledUnpressedButton = withStyles(() => ({\n\troot: {\n\t\tpadding: '.5rem 1.5rem',\n\t\t'background-color': '#FFFFFF'\n\t}\n}))(Button)\n\nconst Reservation = props => {\n\tconst [storedDays, setStoredDays] = useState([]);\n\tconst [reservationCode, setReservationCode] = useState('');\n\n\tconst getSpecificDay = (numDay) => (new Date(new Date().setDate(new Date().getDate() - new Date().getDay() + numDay)).toISOString().slice(0, 10))\n\n\tconst getReadableDay = dateToConvert => {\n\t\tconst [month, numDay] = dateToConvert.slice(5).split('-')\n\t\treturn MONTHS[parseInt(month - 1)] + ' ' + numDay;\n\t}\n\n\tconst today = new Date().toISOString().slice(0, 10)\n\n\tconst firstWeek = getReadableDay(getSpecificDay(1))\n\tconst firstWeekEnd = getReadableDay(getSpecificDay(5))\n\tconst secondWeek = getReadableDay(getSpecificDay(8))\n\tconst secondWeekEnd = getReadableDay(getSpecificDay(12))\n\n\tconst getButtons = startDay => {\n\t\treturn ['M','T','W','T','F'].map((d, x) => {\n\t\t\tconst storeValue = getSpecificDay(x + startDay)\n\t\t\tconst Button = storedDays.includes(storeValue) ? StyledPressedButton : StyledUnpressedButton;\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tkey={storeValue}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tstoredDays.includes(storeValue) ? setStoredDays(storedDays.filter(day => day !== storeValue))\n\t\t\t\t\t\t: setStoredDays([...storedDays, storeValue])\n\t\t\t\t\t}}\n\t\t\t\t\tvariant={storedDays.includes(storeValue) ? 'contained' : ''}\n\t\t\t\t\tdisabled={storeValue < today}\n\t\t\t\t>\n\t\t\t\t\t{d}\n\t\t\t\t</Button>\n\t\t\t)\n\t\t})\n\t}\n\n  return (\n\t\t<BaseContainer>\n\t\t\t<DaySelectionContainer>\n\t\t\t\t<h2>Reserve your days</h2>\n\t\t\t\t<label>Week of {firstWeek} - {firstWeekEnd}</label>\n\t\t\t\t<StyledButtonGroup size=\"large\" color=\"primary\" aria-label=\"large outlined primary button\">\n\t\t\t\t\t{getButtons(1)}\n\t\t\t\t</StyledButtonGroup>\n\t\t\t\t<label>Week of {secondWeek} - {secondWeekEnd}</label>\n\t\t\t\t<StyledButtonGroup size=\"large\" color=\"primary\" aria-label=\"large outlined primary button\">\n\t\t\t\t\t{getButtons(8)}\n\t\t\t\t</StyledButtonGroup>\n\t\t\t</DaySelectionContainer>\n\t\t\t<SelectedDays><b>Selected Days</b></SelectedDays>\n\t\t\t<StyledDivider variant=\"middle\" />\n\t\t\t<SelectedDays>{storedDays.sort().map(d => getReadableDay(d)).join(', ')}</SelectedDays>\n\t\t\t<Form noValidate>\n\t\t\t\t<StyledTextField\n\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\tlabel=\"Reservation Retrival Code\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tonChange={(e) => setReservationCode(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t\t<ReserveButton\n\t\t\t\tdisabled={!(storedDays.length && reservationCode.length)}\n\t\t\t\tsize=\"large\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tonClick={() => console.log(storedDays, reservationCode)}\n\t\t\t>\n\t\t\t\tReserve\n\t\t\t</ReserveButton>\n\t\t</BaseContainer>\n\t) \n}\n\nexport default Reservation;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getCheckInCounts } from '../apiCalls';\nimport HeadstormLogo from '../headstorm_logo.png';\nimport { withRouter } from 'react-router-dom';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1.5rem;\n  background-color: rgb(209, 224, 224, 30%);\n  border-bottom: 0.2rem solid #d1e0e0;\n  max-height: 1.5rem;\n`;\n\nconst Logo = styled.img`\n  width: 20%;\n  @media (max-width: 425px) {\n    width: 50%;\n  }\n`;\n\nconst Count = styled.div`\n  margin-left: auto;\n`;\n\nconst Header = (props) => {\n  const showCheckInCount = ['/', '/safety-rejection', '/good-day', '/admin'].includes(\n    props.location.pathname\n  )\n    ? false\n    : true;\n  const [numCheckedIn, setNumCheckedIn] = useState(0);\n  const totalOccupancy = localStorage.getItem('occupancyRule');\n  useEffect(() => {\n    getCheckInCounts()\n      .then((res) => res.json())\n      .then((response) => {\n        setNumCheckedIn(\n          response.today.positiveCount + response.today.negativeCount\n        );\n        localStorage.setItem(\n          'checkInHistory',\n          JSON.stringify(response.history)\n        );\n      })\n      .catch((error) => console.log(error));\n  });\n\n  return (\n    <BaseContainer>\n      <Logo src={HeadstormLogo} />\n      {showCheckInCount ? (\n        <Count>\n          Checked In {numCheckedIn} / {totalOccupancy}\n        </Count>\n      ) : null}\n    </BaseContainer>\n  );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { Typography, Link, Container } from '@material-ui/core';\n\nconst BaseContainer = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background-color: #f0f2f2;\n  `;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://headstorm.com/\">\n        Headstorm\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst Footer = () => (\n  <BaseContainer>\n    <Container>\n      <Typography variant=\"body2\">\n        All answers are completely anonymous. We do not track your phone, location,\n        or anything about you.\n      </Typography>\n      <Copyright />\n    </Container>\n  </BaseContainer>\n);\n\nexport default withRouter(Footer);\n","import React, { Suspense, lazy } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport GoodDay from './screens/GoodDay';\nimport CheckIn from './screens/CheckIn';\nimport COVIDCheck from './screens/COVIDCheck';\nimport COVIDTestDate from './screens/COVIDTestDate';\nimport SymptomsScreen from './screens/SymptomsScreen';\nimport WFHConf from './screens/WFHConf';\nimport Reservation from './screens/Reservation';\nimport Header from './common/Header';\nimport Footer from './common/Footer';\nimport styled from 'styled-components';\n\nconst BaseContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  min-height: 100vh;\n`;\n\nconst Admin = lazy(() => import('./screens/Admin'));\n\nfunction App() {\n  return (\n    <Router>\n      <BaseContainer>\n        <Header />\n        <Switch>\n          <Route path=\"/check-in\">\n            <CheckIn />\n          </Route>\n          <Route path=\"/covid-check\">\n            <COVIDCheck />\n          </Route>\n          <Route path=\"/covid-test-date\">\n            <COVIDTestDate />\n          </Route>\n          <Route path=\"/good-day\">\n            <GoodDay />\n          </Route>\n          <Route path=\"/symptoms-screen\">\n            <SymptomsScreen />\n          </Route>\n          <Route path=\"/safety-rejection\">\n            <WFHConf />\n          </Route>\n          <Route path=\"/covid-positive\">\n            <WFHConf />\n          </Route>\n          <Route path=\"/wfh-conf\">\n            <WFHConf />\n          </Route>\n          <Route path=\"/reservation\">\n            <Reservation />\n          </Route>\n          <Route path=\"/admin\">\n            <Suspense fallback={<div>Loading</div>}>\n              <Admin />\n            </Suspense>\n          </Route>\n          <Route path=\"/\">\n            <CheckIn />\n          </Route>\n        </Switch>\n        <Footer />\n      </BaseContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const patchCheckIn = async (TestedPositive) => {\n  fetch(\n    `https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/employee-count?TestedPositive=${TestedPositive}`,\n    {\n      method: 'PATCH',\n      mode: 'cors',\n    }\n  );\n};\n\nexport const getCheckInCounts = async () =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/employee-count',\n    {\n      mode: 'cors',\n    }\n  );\n\nexport const getSettings = async () =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/settings/Headstorm',\n    { mode: 'cors' }\n  );\n\nexport const setSettings = async (settings) =>\n  fetch(\n    'https://yt6g0s41t1.execute-api.us-east-1.amazonaws.com/Prod/settings',\n    {\n      mode: 'cors',\n      method: 'POST',\n      body: JSON.stringify(settings),\n    }\n  );\n","module.exports = __webpack_public_path__ + \"static/media/headstorm_logo.872b2a80.png\";"],"sourceRoot":""}